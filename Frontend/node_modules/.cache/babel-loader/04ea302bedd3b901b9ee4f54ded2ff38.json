{"ast":null,"code":"var _jsxFileName = \"/Users/jonathantaylor/Google Drive/Interview/ToDoList copy/Frontend/src/containers/collectionDetails.js\";\nimport React, { useState } from 'react';\nimport BusinessInfo from '../components/businessInfo';\nimport BusinessCalculations from '../components/businessCalculations';\n\nconst CollectionDetails = props => {\n  const [individualInfo, setIndividualInfo] = useState(null);\n  const businessInfo = [{\n    id: 1,\n    name: \"FaceNovel\",\n    amount: 30000,\n    type: \"Recruit New Staff\"\n  }, {\n    id: 2,\n    name: \"WeVlog\",\n    amount: 30000000,\n    type: \"But other business\"\n  }, {\n    id: 3,\n    name: \"LibroPedia\",\n    amount: 75000,\n    type: \"Borrow in anticipation of a revenue source\"\n  }, {\n    id: 4,\n    name: \"Coin Byte\",\n    amount: 250000,\n    type: \"Recruit New Staff\"\n  }];\n\n  const setInfo = (name, amount, type) => {\n    setIndividualInfo({\n      name: name,\n      amount: amount,\n      type: type\n    });\n  };\n\n  let businessUI = businessInfo.map(info => {\n    return /*#__PURE__*/React.createElement(BusinessInfo, {\n      key: info.id,\n      businessClicked: (name, amount, type) => setInfo(name, amount, type),\n      name: info.name,\n      amount: info.amount,\n      type: info.type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, businessUI, /*#__PURE__*/React.createElement(BusinessCalculations, {\n    businessInfo: businessInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), JSON.stringify(individualInfo));\n};\n\nexport default CollectionDetails;","map":{"version":3,"sources":["/Users/jonathantaylor/Google Drive/Interview/ToDoList copy/Frontend/src/containers/collectionDetails.js"],"names":["React","useState","BusinessInfo","BusinessCalculations","CollectionDetails","props","individualInfo","setIndividualInfo","businessInfo","id","name","amount","type","setInfo","businessUI","map","info","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,oBAAP,MAAiC,oCAAjC;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAEjC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,IAAD,CAApD;AAEA,QAAMO,YAAY,GAAG,CACjB;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE,WAAd;AAA2BC,IAAAA,MAAM,EAAE,KAAnC;AAA0CC,IAAAA,IAAI,EAAE;AAAhD,GADiB,EAEjB;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE,QAAd;AAAwBC,IAAAA,MAAM,EAAE,QAAhC;AAA0CC,IAAAA,IAAI,EAAE;AAAhD,GAFiB,EAGjB;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE,YAAd;AAA4BC,IAAAA,MAAM,EAAE,KAApC;AAA2CC,IAAAA,IAAI,EAAE;AAAjD,GAHiB,EAIjB;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE,WAAd;AAA2BC,IAAAA,MAAM,EAAE,MAAnC;AAA2CC,IAAAA,IAAI,EAAE;AAAjD,GAJiB,CAArB;;AAOJ,QAAMC,OAAO,GAAG,CAACH,IAAD,EAAOC,MAAP,EAAeC,IAAf,KAAsB;AAClCL,IAAAA,iBAAiB,CAAC;AAACG,MAAAA,IAAI,EAAEA,IAAP;AAAaC,MAAAA,MAAM,EAAEA,MAArB;AAA6BC,MAAAA,IAAI,EAAEA;AAAnC,KAAD,CAAjB;AACH,GAFD;;AAIA,MAAIE,UAAU,GAAGN,YAAY,CAACO,GAAb,CAAkBC,IAAD,IAAQ;AACtC,wBAAO,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,IAAI,CAACP,EAAxB;AAA4B,MAAA,eAAe,EAAE,CAACC,IAAD,EAAOC,MAAP,EAAeC,IAAf,KAAsBC,OAAO,CAACH,IAAD,EAAOC,MAAP,EAAeC,IAAf,CAA1E;AAAgG,MAAA,IAAI,EAAEI,IAAI,CAACN,IAA3G;AAAiH,MAAA,MAAM,EAAEM,IAAI,CAACL,MAA9H;AAAsI,MAAA,IAAI,EAAEK,IAAI,CAACJ,IAAjJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFgB,CAAjB;AAII,sBACI,0CACCE,UADD,eAEA,oBAAC,oBAAD;AAAsB,IAAA,YAAY,EAAEN,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGCS,IAAI,CAACC,SAAL,CAAeZ,cAAf,CAHD,CADJ;AAQH,CA3BD;;AA6BA,eAAeF,iBAAf","sourcesContent":["import React, { useState } from 'react';\nimport BusinessInfo from '../components/businessInfo';\nimport BusinessCalculations from '../components/businessCalculations';\n\nconst CollectionDetails = (props) => {\n\n    const [individualInfo, setIndividualInfo] = useState(null);\n\n    const businessInfo = [\n        {id: 1, name: \"FaceNovel\", amount: 30000, type: \"Recruit New Staff\"},\n        {id: 2, name: \"WeVlog\", amount: 30000000, type: \"But other business\"},\n        {id: 3, name: \"LibroPedia\", amount: 75000, type: \"Borrow in anticipation of a revenue source\"},\n        {id: 4, name: \"Coin Byte\", amount: 250000, type: \"Recruit New Staff\"}\n]\n\nconst setInfo = (name, amount, type)=>{\n    setIndividualInfo({name: name, amount: amount, type: type})\n}\n\nlet businessUI = businessInfo.map((info)=>{\n    return(<BusinessInfo key={info.id} businessClicked={(name, amount, type)=>setInfo(name, amount, type)} name={info.name} amount={info.amount} type={info.type} />)\n})\n    \n    return(\n        <>\n        {businessUI}\n        <BusinessCalculations businessInfo={businessInfo}/>\n        {JSON.stringify(individualInfo)}\n        </>\n\n    )\n}; \n\nexport default CollectionDetails;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// import React from 'react';\n// import BusinessCalculations from '../components/businessCalculations';\n// const CalculationsPage = ({businessInfo, businessInfoTypeOther, loanTypes}) => {\n//     const average= (type, info)=>{\n//         let number =0;\n//         let total = 0;\n//         info.forEach(business => {\n//             if(business.type == type){\n//                 total += business.amount;\n//                 number += 1;\n//             }\n//         });\n//         let averageLoan = \"No business of this type\"\n//         if(number!==0){\n//             averageLoan = total/number;\n//         }\n//         return averageLoan;\n//     }\n//     let loanTypeTotal = (type, info)=>{\n//         let occurs = 0;\n//         info.forEach(business => {\n//             if(business.type === type){\n//                 occurs+=1;\n//             }\n//         });\n//         return occurs;\n//         }\n// //     const businessCalcUI = loanTypes.map(type=> {\n// //         let typeAverage = average(type, this.businessInfo);\n// //         let typeTotal = loanTypeTotal(type);\n// //         return(<BusinessCalculations type={type}  average={typeAverage} total = {typeTotal}/>)\n// // })\n//     return (\n//         // [businessCalcUI]\n//     )\n// }; \n// export default CalculationsPage;","map":{"version":3,"sources":["/Users/jonathantaylor/Google Drive/Interview2/Frontend/src/containers/calculationsPage.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React from 'react';\n// import BusinessCalculations from '../components/businessCalculations';\n\n// const CalculationsPage = ({businessInfo, businessInfoTypeOther, loanTypes}) => {\n\n//     const average= (type, info)=>{\n//         let number =0;\n//         let total = 0;\n//         info.forEach(business => {\n//             if(business.type == type){\n//                 total += business.amount;\n//                 number += 1;\n//             }\n//         });\n//         let averageLoan = \"No business of this type\"\n//         if(number!==0){\n//             averageLoan = total/number;\n//         }\n//         return averageLoan;\n//     }\n    \n//     let loanTypeTotal = (type, info)=>{\n//         let occurs = 0;\n//         info.forEach(business => {\n//             if(business.type === type){\n//                 occurs+=1;\n//             }\n//         });\n//         return occurs;\n//         }\n\n// //     const businessCalcUI = loanTypes.map(type=> {\n// //         let typeAverage = average(type, this.businessInfo);\n// //         let typeTotal = loanTypeTotal(type);\n// //         return(<BusinessCalculations type={type}  average={typeAverage} total = {typeTotal}/>)\n// // })\n\n\n//     return (\n//         // [businessCalcUI]\n//     )\n// }; \n\n// export default CalculationsPage;"]},"metadata":{},"sourceType":"module"}
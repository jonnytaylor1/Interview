{"ast":null,"code":"export const average = (type, info) => {\n  let number = 0;\n  let total = 0;\n  let bands = {\n    15000: 0,\n    25000: 0,\n    50000: 0,\n    100000: 0,\n    250000: 0,\n    500000: 0,\n    750000: 0,\n    1000000: 0,\n    2000000: 0\n  };\n  info.forEach(business => {\n    if (business.type === type) {\n      total += business.amount;\n      number += 1;\n    }\n\n    if (business.amount >= 15000 && business.amount < 25000) bands[15000] += 1;else if (business.amount >= 25000 && business.amount < 50000) bands[25000] += 1;else if (business.amount >= 100000 && business.amount < 250000) bands[100000] += 1;else if (business.amount >= 250000 && business.amount < 500000) bands[250000] += 1;else if (business.amount >= 500000 && business.amount < 750000) bands[500000] += 1;else if (business.amount >= 750000 && business.amount < 1000000) bands[750000] += 1;else if (business.amount >= 1000000 && business.amount < 2000000) bands[1000000] += 1;else if (business.amount >= 2000000) bands[2000000] += 1;\n  });\n  let averageLoan = number / total;\n  return [averageLoan, total, bands];\n};\nexport let specificLoanBands = (amount, minAmount, maxAmount) => {\n  let counter = 0;\n\n  if (amount <= maxAmount && amount >= minAmount) {\n    counter += 1;\n  }\n\n  return counter;\n};","map":{"version":3,"sources":["/Users/jonathantaylor/Google Drive/Interview2/Frontend/src/calculationFunctions.js"],"names":["average","type","info","number","total","bands","forEach","business","amount","averageLoan","specificLoanBands","minAmount","maxAmount","counter"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAE,CAACC,IAAD,EAAOC,IAAP,KAAc;AAChC,MAAIC,MAAM,GAAE,CAAZ;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,KAAK,GAAG;AAAC,WAAO,CAAR;AAAW,WAAO,CAAlB;AAAqB,WAAO,CAA5B;AAA+B,YAAQ,CAAvC;AAA0C,YAAQ,CAAlD;AAAqD,YAAQ,CAA7D;AAAgE,YAAQ,CAAxE;AAA2E,aAAS,CAApF;AAAuF,aAAS;AAAhG,GAAZ;AACAH,EAAAA,IAAI,CAACI,OAAL,CAAaC,QAAQ,IAAI;AACrB,QAAGA,QAAQ,CAACN,IAAT,KAAkBA,IAArB,EAA0B;AACtBG,MAAAA,KAAK,IAAIG,QAAQ,CAACC,MAAlB;AACAL,MAAAA,MAAM,IAAI,CAAV;AACH;;AACD,QAAGI,QAAQ,CAACC,MAAT,IAAiB,KAAjB,IAA0BD,QAAQ,CAACC,MAAT,GAAgB,KAA7C,EAAoDH,KAAK,CAAC,KAAD,CAAL,IAAgB,CAAhB,CAApD,KACK,IAAIE,QAAQ,CAACC,MAAT,IAAiB,KAAjB,IAA0BD,QAAQ,CAACC,MAAT,GAAgB,KAA9C,EAAqDH,KAAK,CAAC,KAAD,CAAL,IAAgB,CAAhB,CAArD,KACA,IAAIE,QAAQ,CAACC,MAAT,IAAiB,MAAjB,IAA2BD,QAAQ,CAACC,MAAT,GAAgB,MAA/C,EAAuDH,KAAK,CAAC,MAAD,CAAL,IAAiB,CAAjB,CAAvD,KACA,IAAIE,QAAQ,CAACC,MAAT,IAAiB,MAAjB,IAA2BD,QAAQ,CAACC,MAAT,GAAgB,MAA/C,EAAuDH,KAAK,CAAC,MAAD,CAAL,IAAiB,CAAjB,CAAvD,KACA,IAAIE,QAAQ,CAACC,MAAT,IAAiB,MAAjB,IAA2BD,QAAQ,CAACC,MAAT,GAAgB,MAA/C,EAAuDH,KAAK,CAAC,MAAD,CAAL,IAAiB,CAAjB,CAAvD,KACA,IAAIE,QAAQ,CAACC,MAAT,IAAiB,MAAjB,IAA2BD,QAAQ,CAACC,MAAT,GAAgB,OAA/C,EAAwDH,KAAK,CAAC,MAAD,CAAL,IAAiB,CAAjB,CAAxD,KACA,IAAIE,QAAQ,CAACC,MAAT,IAAiB,OAAjB,IAA4BD,QAAQ,CAACC,MAAT,GAAgB,OAAhD,EAAyDH,KAAK,CAAC,OAAD,CAAL,IAAkB,CAAlB,CAAzD,KACA,IAAIE,QAAQ,CAACC,MAAT,IAAiB,OAArB,EAA8BH,KAAK,CAAC,OAAD,CAAL,IAAkB,CAAlB;AAEtC,GAdD;AAeA,MAAII,WAAW,GAAGN,MAAM,GAACC,KAAzB;AAEA,SAAO,CAACK,WAAD,EAAcL,KAAd,EAAqBC,KAArB,CAAP;AACH,CAtBM;AAyBP,OAAO,IAAIK,iBAAiB,GAAG,CAACF,MAAD,EAASG,SAAT,EAAoBC,SAApB,KAAgC;AACvD,MAAIC,OAAO,GAAG,CAAd;;AACA,MAAGL,MAAM,IAAEI,SAAR,IAAqBJ,MAAM,IAAGG,SAAjC,EAA2C;AACvCE,IAAAA,OAAO,IAAE,CAAT;AACH;;AACD,SAAOA,OAAP;AACH,CANE","sourcesContent":["export const average= (type, info)=>{\n    let number =0;\n    let total = 0;\n    let bands = {15000: 0, 25000: 0, 50000: 0, 100000: 0, 250000: 0, 500000: 0, 750000: 0, 1000000: 0, 2000000: 0};\n    info.forEach(business => {\n        if(business.type === type){\n            total += business.amount;\n            number += 1;\n        }\n        if(business.amount>=15000 && business.amount<25000) bands[15000] += 1;\n        else if (business.amount>=25000 && business.amount<50000) bands[25000] += 1;\n        else if (business.amount>=100000 && business.amount<250000) bands[100000] += 1;\n        else if (business.amount>=250000 && business.amount<500000) bands[250000] += 1;\n        else if (business.amount>=500000 && business.amount<750000) bands[500000] += 1;\n        else if (business.amount>=750000 && business.amount<1000000) bands[750000] += 1;\n        else if (business.amount>=1000000 && business.amount<2000000) bands[1000000] += 1;\n        else if (business.amount>=2000000) bands[2000000] += 1;\n\n    });\n    let averageLoan = number/total;\n\n    return [averageLoan, total, bands];\n}\n\n\nexport let specificLoanBands = (amount, minAmount, maxAmount)=>{\n        let counter = 0;\n        if(amount<=maxAmount && amount>= minAmount){\n            counter+=1;\n        }\n        return counter;\n    }"]},"metadata":{},"sourceType":"module"}
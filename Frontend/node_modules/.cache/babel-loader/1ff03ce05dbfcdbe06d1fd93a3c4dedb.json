{"ast":null,"code":"var _jsxFileName = \"/Users/jonathantaylor/Google Drive/Interview2/Frontend/src/containers/loansAndData.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { loanTypeContext, companyLoanContext } from '../context';\nimport Company from '../components/company';\nimport InputAndError from '../components/inputAndError';\nimport SelectAndError from '../components/selectAndError';\nimport LoanRequest from '../components/loanInfo';\nimport styled from 'styled-components';\nconst StyledUl = styled.ul`\nborder: black solid 1px;\nwidth: 400px;\n`;\n\nconst LoansAndData = props => {\n  const [companies, setCompanies] = useState([]);\n  const startFormData = {\n    name: \"\",\n    amount: \"\",\n    type: \"DEFAULT\",\n    otherType: \"\"\n  };\n  const {\n    loanTypes\n  } = useContext(loanTypeContext);\n  const [loanData, setLoanData] = useState(startFormData);\n  const {\n    companyLoanDetails,\n    setCompanyLoanDetails\n  } = useContext(companyLoanContext);\n  const [inputValidated, setInputValidated] = useState({\n    name: false,\n    amount: false,\n    type: false,\n    otherType: true\n  });\n  const [inputClicked, setInputClicked] = useState({\n    name: false,\n    amount: false,\n    type: false,\n    otherType: false\n  });\n  useEffect(() => {\n    getCompanies();\n  }, []);\n\n  const getCompanies = async () => {\n    let response = await axios.get('http://localhost:5000/loans');\n    setCompanies(response.data.companies);\n  };\n\n  const addLoan = async e => {\n    e.preventDefault();\n    let data = {\n      name: loanData.name,\n      amount: loanData.amount,\n      type: loanData.type,\n      otherType: loanData.otherType\n    };\n    await axios.post('http://localhost:5000/loans', data);\n    setLoanData(startFormData);\n    getCompanies();\n  };\n\n  const dropDownChangeHandler = e => {\n    let {\n      value\n    } = e.target;\n\n    if (value === \"Other\") {\n      setLoanData({ ...loanData,\n        type: value\n      });\n      setInputValidated({ ...inputValidated,\n        otherType: false\n      });\n    } else {\n      setLoanData({ ...loanData,\n        type: value,\n        otherType: \"\"\n      });\n      setInputValidated({ ...inputValidated,\n        otherType: true\n      });\n    }\n  };\n\n  const onChangeHandler = e => {\n    let {\n      name,\n      value\n    } = e.target;\n    setLoanData({ ...loanData,\n      [name]: value\n    });\n  };\n\n  const showLoanDetails = companyId => {\n    let clickedCompany = companies.find(company => company._id === companyId);\n    setCompanyLoanDetails(clickedCompany);\n  };\n\n  const deleteCompany = async companyId => {\n    await axios.delete('http://localhost:5000/loans/' + companyId);\n    let updatedCompanies = [...companies].filter(company => company._id !== companyId);\n    setCompanies(updatedCompanies);\n  };\n\n  const inputUsed = name => {\n    if (inputClicked.name === false) {\n      setInputClicked({ ...inputClicked,\n        [name]: true\n      });\n    }\n  };\n\n  const onBlurHandler = e => {\n    let {\n      name,\n      value\n    } = e.target;\n    inputUsed(name);\n    isFieldValid(name, value);\n  };\n\n  const isFieldValid = (name, value) => {\n    let validator = true;\n\n    if (value === \"\") {\n      validator = \"Please insert a value\";\n      setInputValidated({ ...inputValidated,\n        [name]: validator\n      });\n      return;\n    }\n\n    switch (name) {\n      case \"type\":\n        if (value === \"DEFAULT\") {\n          validator = \"Please choose a type\";\n        }\n\n        break;\n\n      case \"amount\":\n        console.log(name);\n\n        if (value < 15000) {\n          validator = \"Please insert an amount greater than Â£15000\";\n        } else if (value % 1000 !== 0) {\n          validator = \"Please insert an amount that is a multiple of 1000\";\n        }\n\n        break;\n    }\n\n    setInputValidated({ ...inputValidated,\n      [name]: validator\n    });\n  };\n\n  let formValid = () => {\n    for (let key in inputValidated) {\n      if (inputValidated[key] !== true) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  let companiesUI;\n\n  if (companies !== []) {\n    companiesUI = companies.map(company => {\n      return /*#__PURE__*/React.createElement(Company, {\n        showLoanDetails: () => showLoanDetails(company._id),\n        key: company._id,\n        name: company.name,\n        deleteCompany: () => deleteCompany(company._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 20\n        }\n      }, company.loans.map(loan => /*#__PURE__*/React.createElement(LoanRequest, {\n        amount: loan.amount,\n        type: loan.type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 45\n        }\n      })));\n    });\n  }\n\n  const optionElements = [/*#__PURE__*/React.createElement(\"option\", {\n    key: \"-1\",\n    value: \"DEFAULT\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, \"Loan Type\"), loanTypes.map((loanType, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: loanType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 124\n    }\n  }, loanType))];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => addLoan(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputAndError, {\n    id: \"nameInput\",\n    label: \"Name\",\n    name: \"name\",\n    value: loanData.name,\n    onChange: e => onChangeHandler(e),\n    onBlur: e => onBlurHandler(e),\n    errorMessage: inputValidated.name,\n    inputClicked: inputClicked.name,\n    inputValidated: inputValidated.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InputAndError, {\n    id: \"amountInput\",\n    label: \"Amount\",\n    name: \"amount\",\n    value: loanData.amount,\n    onChange: e => onChangeHandler(e),\n    onBlur: e => onBlurHandler(e),\n    errorMessage: inputValidated.amount,\n    inputClicked: inputClicked.amount,\n    inputValidated: inputValidated.amount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SelectAndError, {\n    id: \"loanType\",\n    label: \"Type\",\n    onBlur: e => onBlurHandler(e),\n    required: true,\n    name: \"type\",\n    value: loanData.type,\n    onChange: e => dropDownChangeHandler(e),\n    errorMessage: inputValidated.type,\n    inputClicked: inputClicked.type,\n    inputValidated: inputValidated.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, optionElements), loanData.type === \"Other\" ? /*#__PURE__*/React.createElement(InputAndError, {\n    id: \"otherType\",\n    label: \"Other Type\",\n    name: \"otherType\",\n    value: loanData.otherType,\n    onChange: e => onChangeHandler(e),\n    onBlur: e => onBlurHandler(e),\n    errorMessage: inputValidated.otherType,\n    inputClicked: inputClicked.otherType,\n    inputValidated: inputValidated.otherType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"button\", {\n    disabled: !formValid(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"Add Loan Request\")), companies !== [] ? /*#__PURE__*/React.createElement(StyledUl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 27\n    }\n  }, companiesUI) : null);\n};\n\nexport default LoansAndData;","map":{"version":3,"sources":["/Users/jonathantaylor/Google Drive/Interview2/Frontend/src/containers/loansAndData.js"],"names":["React","useEffect","useState","useContext","axios","loanTypeContext","companyLoanContext","Company","InputAndError","SelectAndError","LoanRequest","styled","StyledUl","ul","LoansAndData","props","companies","setCompanies","startFormData","name","amount","type","otherType","loanTypes","loanData","setLoanData","companyLoanDetails","setCompanyLoanDetails","inputValidated","setInputValidated","inputClicked","setInputClicked","getCompanies","response","get","data","addLoan","e","preventDefault","post","dropDownChangeHandler","value","target","onChangeHandler","showLoanDetails","companyId","clickedCompany","find","company","_id","deleteCompany","delete","updatedCompanies","filter","inputUsed","onBlurHandler","isFieldValid","validator","console","log","formValid","key","companiesUI","map","loans","loan","optionElements","loanType","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { loanTypeContext, companyLoanContext } from '../context';\nimport Company from '../components/company';\nimport InputAndError from '../components/inputAndError';\nimport SelectAndError from '../components/selectAndError';\nimport LoanRequest from '../components/loanInfo';\nimport styled from 'styled-components';\n\nconst StyledUl = styled.ul`\nborder: black solid 1px;\nwidth: 400px;\n`\n\n\n\nconst LoansAndData = (props) => {\n    const [companies, setCompanies] = useState([]); \n    const startFormData = {name: \"\", amount: \"\", type: \"DEFAULT\", otherType: \"\"};\n    const {loanTypes} = useContext(loanTypeContext);\n    const [loanData, setLoanData] = useState(startFormData);\n    const {companyLoanDetails, setCompanyLoanDetails} = useContext(companyLoanContext);\n    const [inputValidated, setInputValidated] = useState({name: false, amount: false, type: false, otherType: true})\n    const [inputClicked, setInputClicked] = useState({name: false, amount: false, type: false, otherType: false});\n\n    useEffect(()=> {\n        getCompanies();\n    }, [])\n\n    const getCompanies = async ()=>{\n        let response = await axios.get('http://localhost:5000/loans');\n        setCompanies(response.data.companies);\n    }\n\n    const addLoan = async (e)=>{\n        e.preventDefault();\n        let data = {name: loanData.name, amount: loanData.amount, type: loanData.type, otherType: loanData.otherType};\n        await axios.post('http://localhost:5000/loans', data);\n        setLoanData(startFormData);\n        getCompanies();        \n    }\n\n    const dropDownChangeHandler = (e)=>{\n        let {value} = e.target;\n        if(value===\"Other\"){\n            setLoanData({...loanData, type: value})\n            setInputValidated({...inputValidated, otherType: false})\n        }\n        else{\n            setLoanData({...loanData, type: value, otherType: \"\"});\n            setInputValidated({...inputValidated, otherType: true})\n        }\n    }\n\n    const onChangeHandler = (e)=>{\n        let {name, value} = e.target;\n        setLoanData({...loanData, [name]: value});\n    }\n\n    const showLoanDetails = (companyId)=>{\n        let clickedCompany = companies.find(company=> company._id===companyId);\n        setCompanyLoanDetails(clickedCompany);\n    }\n    const deleteCompany = async (companyId)=>{\n        await axios.delete('http://localhost:5000/loans/' + companyId);\n        let updatedCompanies = [...companies].filter(company=>company._id!==companyId);\n        setCompanies(updatedCompanies);\n    }\n\n    const inputUsed = (name)=>{\n        if(inputClicked.name===false){\n            setInputClicked({...inputClicked, [name]: true})\n        }\n    }\n\n    const onBlurHandler = (e)=>{\n        let {name, value} = e.target;\n        inputUsed(name);\n        isFieldValid(name, value);\n    }\n\n    const isFieldValid = (name, value)=>{\n        let validator = true;\n        if(value===\"\"){\n            validator = \"Please insert a value\";\n            setInputValidated({...inputValidated, [name]: validator});\n            return\n        }\n\n        switch(name) {\n\n        case \"type\":\n            if(value===\"DEFAULT\"){\n                validator = \"Please choose a type\"\n            }\n            break;\n\n        case \"amount\":\n            console.log(name);\n            if(value < 15000){\n                validator = \"Please insert an amount greater than Â£15000\"\n            }\n            else if(value%1000!==0){\n                validator = \"Please insert an amount that is a multiple of 1000\"  \n            }   \n            break;     \n    }\n    setInputValidated({...inputValidated, [name]: validator});\n}\n\nlet formValid = ()=>{\n    for (let key in inputValidated){\n        if(inputValidated[key]!==true){\n            return false;\n        }\n    }\n    return true;\n}\n\n\n  let companiesUI;\n    if(companies!==[]){\n        companiesUI = companies.map(company=>{\n            return <Company showLoanDetails={()=>showLoanDetails(company._id)} key={company._id} name = {company.name} deleteCompany={()=>deleteCompany(company._id)}>\n                {company.loans.map((loan)=> <LoanRequest amount={loan.amount} type={loan.type}/>)}\n            </Company>\n        })\n    }\n   \n    const optionElements = [<option key=\"-1\" value=\"DEFAULT\" disabled>Loan Type</option>, loanTypes.map((loanType, index)=><option key={index} value={loanType}>{loanType}</option>)];\n\n\n    return(\n        <>\n        <form onSubmit={(e)=>addLoan(e)} >\n            <InputAndError id=\"nameInput\" label=\"Name\" name=\"name\" value={loanData.name} onChange={(e)=>onChangeHandler(e)} onBlur={(e)=>onBlurHandler(e)} errorMessage={inputValidated.name} inputClicked={inputClicked.name} inputValidated={inputValidated.name}/>\n            <InputAndError id=\"amountInput\" label=\"Amount\" name=\"amount\" value={loanData.amount} onChange={(e)=>onChangeHandler(e)} onBlur={(e)=>onBlurHandler(e)} errorMessage={inputValidated.amount} inputClicked={inputClicked.amount} inputValidated={inputValidated.amount}/>\n            <SelectAndError id=\"loanType\" label=\"Type\" onBlur={(e)=>onBlurHandler(e)} required name=\"type\" value={loanData.type} onChange={(e)=>dropDownChangeHandler(e)} errorMessage={inputValidated.type} inputClicked={inputClicked.type} inputValidated={inputValidated.type}>\n                {optionElements}\n            </SelectAndError>\n            {loanData.type===\"Other\" ? \n            <InputAndError id=\"otherType\" label=\"Other Type\" name=\"otherType\" value={loanData.otherType} onChange={(e)=>onChangeHandler(e)} onBlur={(e)=>onBlurHandler(e)} errorMessage={inputValidated.otherType} inputClicked={inputClicked.otherType} inputValidated={inputValidated.otherType}/>\n            : null}\n            <button disabled={!formValid()}>Add Loan Request</button>\n        </form>\n        {companies!==[] ? <StyledUl>{companiesUI}</StyledUl> : null}\n        </>\n    )\n}; \n\nexport default LoansAndData;"]},"metadata":{},"sourceType":"module"}
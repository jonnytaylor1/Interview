{"ast":null,"code":"var _jsxFileName = \"/Users/jonathantaylor/Google Drive/Interview/ToDoList copy/Frontend/src/containers/calculationsPage.js\";\nimport React from 'react';\nimport BusinessCalculations from '../components/businessCalculations';\n\nconst CalculationsPage = ({\n  businessInfo,\n  businessInfoTypeOther,\n  loanTypes\n}) => {\n  const average = (type, businessInfo = businessInfo) => {\n    let number = 0;\n    let total = 0;\n    businessInfo.forEach(business => {\n      if (business.type == type) {\n        total += business.amount;\n        number += 1;\n      }\n    });\n    let averageLoan = \"No business of this type\";\n\n    if (number !== 0) {\n      let averageLoan = total / number;\n    }\n\n    return averageLoan;\n  };\n\n  let loanTypeTotal = type => {\n    let occurs = 0;\n    businessInfo.forEach(business => {\n      if (business.type === type) {\n        occurs += 1;\n      }\n    });\n    return occurs;\n  };\n\n  const businessCalcUI = loanTypes.map(type => {\n    let typeAverage = average(type);\n    let typeTotal = loanTypeTotal(type);\n    return /*#__PURE__*/React.createElement(BusinessCalculations, {\n      type: type,\n      average: typeAverage,\n      total: typeTotal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }\n    });\n  });\n  return [businessCalcUI];\n};\n\nexport default CalculationsPage;","map":{"version":3,"sources":["/Users/jonathantaylor/Google Drive/Interview/ToDoList copy/Frontend/src/containers/calculationsPage.js"],"names":["React","BusinessCalculations","CalculationsPage","businessInfo","businessInfoTypeOther","loanTypes","average","type","number","total","forEach","business","amount","averageLoan","loanTypeTotal","occurs","businessCalcUI","map","typeAverage","typeTotal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,oBAAP,MAAiC,oCAAjC;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA,qBAAf;AAAsCC,EAAAA;AAAtC,CAAD,KAAsD;AAE3E,QAAMC,OAAO,GAAE,CAACC,IAAD,EAAOJ,YAAY,GAACA,YAApB,KAAmC;AAC9C,QAAIK,MAAM,GAAE,CAAZ;AACA,QAAIC,KAAK,GAAG,CAAZ;AACAN,IAAAA,YAAY,CAACO,OAAb,CAAqBC,QAAQ,IAAI;AAC7B,UAAGA,QAAQ,CAACJ,IAAT,IAAiBA,IAApB,EAAyB;AACrBE,QAAAA,KAAK,IAAIE,QAAQ,CAACC,MAAlB;AACAJ,QAAAA,MAAM,IAAI,CAAV;AACH;AACJ,KALD;AAMA,QAAIK,WAAW,GAAG,0BAAlB;;AACA,QAAGL,MAAM,KAAG,CAAZ,EAAc;AACV,UAAIK,WAAW,GAAGJ,KAAK,GAACD,MAAxB;AACH;;AACD,WAAOK,WAAP;AACH,GAdD;;AAgBA,MAAIC,aAAa,GAAIP,IAAD,IAAQ;AACxB,QAAIQ,MAAM,GAAG,CAAb;AACAZ,IAAAA,YAAY,CAACO,OAAb,CAAqBC,QAAQ,IAAI;AAC7B,UAAGA,QAAQ,CAACJ,IAAT,KAAkBA,IAArB,EAA0B;AACtBQ,QAAAA,MAAM,IAAE,CAAR;AACH;AACJ,KAJD;AAKA,WAAOA,MAAP;AACC,GARL;;AAUA,QAAMC,cAAc,GAAGX,SAAS,CAACY,GAAV,CAAcV,IAAI,IAAG;AACxC,QAAIW,WAAW,GAAGZ,OAAO,CAACC,IAAD,CAAzB;AACA,QAAIY,SAAS,GAAGL,aAAa,CAACP,IAAD,CAA7B;AACA,wBAAO,oBAAC,oBAAD;AAAsB,MAAA,IAAI,EAAEA,IAA5B;AAAmC,MAAA,OAAO,EAAEW,WAA5C;AAAyD,MAAA,KAAK,EAAIC,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACP,GAJ0B,CAAvB;AAOA,SACI,CAACH,cAAD,CADJ;AAGH,CAtCD;;AAwCA,eAAed,gBAAf","sourcesContent":["import React from 'react';\nimport BusinessCalculations from '../components/businessCalculations';\n\nconst CalculationsPage = ({businessInfo, businessInfoTypeOther, loanTypes}) => {\n\n    const average= (type, businessInfo=businessInfo)=>{\n        let number =0;\n        let total = 0;\n        businessInfo.forEach(business => {\n            if(business.type == type){\n                total += business.amount;\n                number += 1;\n            }\n        });\n        let averageLoan = \"No business of this type\"\n        if(number!==0){\n            let averageLoan = total/number;\n        }\n        return averageLoan;\n    }\n    \n    let loanTypeTotal = (type)=>{\n        let occurs = 0;\n        businessInfo.forEach(business => {\n            if(business.type === type){\n                occurs+=1;\n            }\n        });\n        return occurs;\n        }\n\n    const businessCalcUI = loanTypes.map(type=> {\n        let typeAverage = average(type);\n        let typeTotal = loanTypeTotal(type);\n        return(<BusinessCalculations type={type}  average={typeAverage} total = {typeTotal}/>)\n})\n\n\n    return (\n        [businessCalcUI]\n    )\n}; \n\nexport default CalculationsPage;"]},"metadata":{},"sourceType":"module"}
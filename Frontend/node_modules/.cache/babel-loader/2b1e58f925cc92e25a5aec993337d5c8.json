{"ast":null,"code":"var _jsxFileName = \"/Users/jonathantaylor/Google Drive/Interview/ToDoList copy/Frontend/src/components/businessCalculations.js\";\nimport React from 'react';\n\nconst BusinessCalculations = ({\n  businessInfo,\n  loanType\n}) => {\n  const types = [\"Acquire a new vehicle for my business\", \"Acquire a new piece of equipment\", \"Buy a property and to rent it out\", \"Buy another business\", \"Export overseas\", \"Recruit new staff\", \"Other\"];\n\n  const average = type => {\n    let number = 0;\n    let total = 0;\n    businessInfo.forEach(business => {\n      if (business.type === type) {\n        total += business.amount;\n        number += 1;\n      }\n    });\n    let averageLoan = total / number;\n    return averageLoan;\n  };\n\n  let loanTypeTotal = type => {\n    let occurs = 0;\n    businessInfo.forEach(business => {\n      if (business.type === type) {\n        occurs += 1;\n      }\n    });\n    return occurs;\n  };\n\n  let specificLoanBands = (amount, minAmount, maxAmount) => {\n    let counter = 0;\n\n    if (amount <= maxAmount && amount >= minAmount) {\n      counter += 1;\n    }\n\n    return counter;\n  };\n\n  let averageType = average(\"Recruit New Staff\");\n  let frequency = loanTypeTotal(\"Recruit New Staff\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, \"Loan Type: \", loanType), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, \"Average: \", averageType), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, \"Loan Type Frequency: \", frequency));\n};\n\nexport default BusinessCalculations;","map":{"version":3,"sources":["/Users/jonathantaylor/Google Drive/Interview/ToDoList copy/Frontend/src/components/businessCalculations.js"],"names":["React","BusinessCalculations","businessInfo","loanType","types","average","type","number","total","forEach","business","amount","averageLoan","loanTypeTotal","occurs","specificLoanBands","minAmount","maxAmount","counter","averageType","frequency"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAAD,KAA8B;AAE3D,QAAMC,KAAK,GAAG,CAAC,uCAAD,EAAyC,kCAAzC,EAA4E,mCAA5E,EAAgH,sBAAhH,EAAuI,iBAAvI,EAAyJ,mBAAzJ,EAA6K,OAA7K,CAAd;;AAGA,QAAMC,OAAO,GAAGC,IAAD,IAAQ;AACnB,QAAIC,MAAM,GAAE,CAAZ;AACA,QAAIC,KAAK,GAAG,CAAZ;AACAN,IAAAA,YAAY,CAACO,OAAb,CAAqBC,QAAQ,IAAI;AAC7B,UAAGA,QAAQ,CAACJ,IAAT,KAAkBA,IAArB,EAA0B;AACtBE,QAAAA,KAAK,IAAIE,QAAQ,CAACC,MAAlB;AACAJ,QAAAA,MAAM,IAAI,CAAV;AACH;AACJ,KALD;AAMA,QAAIK,WAAW,GAAGJ,KAAK,GAACD,MAAxB;AAEA,WAAOK,WAAP;AACH,GAZD;;AAcA,MAAIC,aAAa,GAAIP,IAAD,IAAQ;AACxB,QAAIQ,MAAM,GAAG,CAAb;AACAZ,IAAAA,YAAY,CAACO,OAAb,CAAqBC,QAAQ,IAAI;AAC7B,UAAGA,QAAQ,CAACJ,IAAT,KAAkBA,IAArB,EAA0B;AACtBQ,QAAAA,MAAM,IAAE,CAAR;AACH;AACJ,KAJD;AAKA,WAAOA,MAAP;AACC,GARL;;AAWA,MAAIC,iBAAiB,GAAG,CAACJ,MAAD,EAASK,SAAT,EAAoBC,SAApB,KAAgC;AACpD,QAAIC,OAAO,GAAG,CAAd;;AACA,QAAGP,MAAM,IAAEM,SAAR,IAAqBN,MAAM,IAAGK,SAAjC,EAA2C;AACvCE,MAAAA,OAAO,IAAE,CAAT;AACH;;AACD,WAAOA,OAAP;AACH,GAND;;AAQA,MAAIC,WAAW,GAAGd,OAAO,CAAC,mBAAD,CAAzB;AACA,MAAIe,SAAS,GAAGP,aAAa,CAAC,mBAAD,CAA7B;AAGA,sBACI,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeV,QAAf,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAagB,WAAb,CAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAyBC,SAAzB,CAHA,CADJ;AAOC,CAjDD;;AAmDA,eAAenB,oBAAf","sourcesContent":["import React from 'react';\n\nconst BusinessCalculations = ({businessInfo, loanType}) => {\n\nconst types = [\"Acquire a new vehicle for my business\",\"Acquire a new piece of equipment\",\"Buy a property and to rent it out\",\"Buy another business\",\"Export overseas\",\"Recruit new staff\",\"Other\"];\n\n\nconst average= (type)=>{\n    let number =0;\n    let total = 0;\n    businessInfo.forEach(business => {\n        if(business.type === type){\n            total += business.amount;\n            number += 1;\n        }\n    });\n    let averageLoan = total/number;\n\n    return averageLoan;\n}\n\nlet loanTypeTotal = (type)=>{\n    let occurs = 0;\n    businessInfo.forEach(business => {\n        if(business.type === type){\n            occurs+=1;\n        }\n    });\n    return occurs;\n    }\n\n\nlet specificLoanBands = (amount, minAmount, maxAmount)=>{\n    let counter = 0;\n    if(amount<=maxAmount && amount>= minAmount){\n        counter+=1;\n    }\n    return counter;\n}\n\nlet averageType = average(\"Recruit New Staff\");\nlet frequency = loanTypeTotal(\"Recruit New Staff\");\n\n\nreturn(\n    <>\n    <p>Loan Type: {loanType}</p>\n    <p>Average: {averageType}</p>\n    <p>Loan Type Frequency: {frequency}</p>\n    </>\n)\n}; \n\nexport default BusinessCalculations;"]},"metadata":{},"sourceType":"module"}
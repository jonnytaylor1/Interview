{"ast":null,"code":"var _jsxFileName = \"/Users/jonathantaylor/Google Drive/Interview2/Frontend/src/containers/loansAndData.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport LoanInfo from '../components/loanInfo';\nimport { loanTypeContext } from '../context';\nimport Company from '../components/company';\n\nconst LoansAndData = props => {\n  const [companyLoans, setCompanyLoans] = useState([]);\n  const startFormData = {\n    name: \"\",\n    amount: \"\",\n    type: \"DEFAULT\",\n    otherType: \"\"\n  };\n  const {\n    loanTypes\n  } = useContext(loanTypeContext);\n  const [loanData, setLoanData] = useState(startFormData);\n  const [otherType, setOtherType] = useState(false);\n  const [loans, setLoans] = useState([]);\n  useEffect(() => {\n    getCompanyLoans();\n  }, []);\n\n  const getCompanyLoans = async () => {\n    let response = await axios.get('http://localhost:5000/loans');\n    setCompanyLoans(response.data.companies);\n  };\n\n  const addLoan = async e => {\n    e.preventDefault();\n    let data = {\n      name: loanData.name,\n      amount: loanData.amount,\n      type: loanData.type,\n      otherType: loanData.otherType\n    };\n    await axios.post('http://localhost:5000/loans', data);\n    setLoanData(startFormData);\n    getCompanyLoans();\n  };\n\n  const dropDownChangeHandler = e => {\n    let {\n      value\n    } = e.target;\n\n    if (value === \"Other\") {\n      setLoanData({ ...loanData,\n        type: value\n      });\n    } else {\n      setLoanData({ ...loanData,\n        type: value,\n        otherType: \"\"\n      });\n    }\n  };\n\n  const onChangeHandler = e => {\n    let {\n      name,\n      value\n    } = e.target;\n    setLoanData({ ...loanData,\n      [name]: value\n    });\n  };\n\n  const showLoanDetails = companyId => {\n    let clickedCompany = companyLoans.find(company => company._id === companyId);\n    setLoans(clickedCompany.loans);\n  }; // const deleteLoan = (loanId)=>{\n  //     await axios.delete('http://localhost:5000/loans/' + loanId)\n  // }\n\n\n  let companyLoansUI;\n\n  if (companyLoans !== []) {\n    companiesUI = companyLoans.map(company => {\n      return /*#__PURE__*/React.createElement(Company, {\n        onClick: () => showLoanDetails(company._id),\n        key: company._id,\n        name: company.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 20\n        }\n      });\n    });\n  }\n\n  const optionElements = loanTypes.map((loanType, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: loanType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 61\n    }\n  }, loanType));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => addLoan(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    value: loanData.name,\n    name: \"name\",\n    onChange: e => onChangeHandler(e),\n    placeholder: \"Business Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    required: true,\n    value: loanData.amount,\n    name: \"amount\",\n    onChange: e => onChangeHandler(e),\n    placeholder: \"Loan Amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    required: true,\n    name: \"loan types\",\n    name: \"type\",\n    value: loanData.type,\n    onChange: e => dropDownChangeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"DEFAULT\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Loan Type\"), optionElements), loanData.type === \"Other\" ? /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    value: loanData.otherType,\n    name: \"otherType\",\n    onChange: e => {\n      onChangeHandler(e);\n    },\n    placeholder: \"Loan Type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 40\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Add Loan Request\")), companyLoans !== [] ? companyLoansUI : null, JSON.stringify(loans));\n};\n\nexport default LoansAndData;","map":{"version":3,"sources":["/Users/jonathantaylor/Google Drive/Interview2/Frontend/src/containers/loansAndData.js"],"names":["React","useEffect","useState","useContext","axios","LoanInfo","loanTypeContext","Company","LoansAndData","props","companyLoans","setCompanyLoans","startFormData","name","amount","type","otherType","loanTypes","loanData","setLoanData","setOtherType","loans","setLoans","getCompanyLoans","response","get","data","companies","addLoan","e","preventDefault","post","dropDownChangeHandler","value","target","onChangeHandler","showLoanDetails","companyId","clickedCompany","find","company","_id","companyLoansUI","companiesUI","map","optionElements","loanType","index","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport LoanInfo from '../components/loanInfo';\nimport { loanTypeContext } from '../context';\nimport Company from '../components/company';\n\nconst LoansAndData = (props) => {\n    const [companyLoans, setCompanyLoans] = useState([]); \n    const startFormData = {name: \"\", amount: \"\", type: \"DEFAULT\", otherType: \"\"};\n    const {loanTypes} = useContext(loanTypeContext);\n    const [loanData, setLoanData] = useState(startFormData);\n    const [otherType, setOtherType] = useState(false);\n    const [loans, setLoans] = useState([]);\n\n    useEffect(()=> {\n        getCompanyLoans();\n    }, [])\n\n    const getCompanyLoans = async ()=>{\n        let response = await axios.get('http://localhost:5000/loans');\n        setCompanyLoans(response.data.companies);\n    }\n\n    const addLoan = async (e)=>{\n        e.preventDefault();\n        let data = {name: loanData.name, amount: loanData.amount, type: loanData.type, otherType: loanData.otherType};\n        await axios.post('http://localhost:5000/loans', data);\n        setLoanData(startFormData);\n        getCompanyLoans();\n        \n    }\n\n    const dropDownChangeHandler = (e)=>{\n        let {value} = e.target;\n        if(value===\"Other\"){\n            setLoanData({...loanData, type: value})\n        }\n        else{\n            setLoanData({...loanData, type: value, otherType: \"\"})\n        }\n    }\n\n    const onChangeHandler = (e)=>{\n        let {name, value} = e.target;\n        setLoanData({...loanData, [name]: value});\n    }\n\n    const showLoanDetails = (companyId)=>{\n        let clickedCompany = companyLoans.find(company=> company._id===companyId);\n        setLoans(clickedCompany.loans);\n    }\n    // const deleteLoan = (loanId)=>{\n    //     await axios.delete('http://localhost:5000/loans/' + loanId)\n    // }\n\n  let companyLoansUI;\n    if(companyLoans!==[]){\n        companiesUI = companyLoans.map(company=>{\n            return <Company onClick={()=>showLoanDetails(company._id)} key={company._id} name = {company.name}/>\n        })\n    }\n   \n\n    const optionElements = loanTypes.map((loanType, index)=><option key={index} value={loanType}>{loanType}</option>)\n\n    return(\n        <>\n        <form onSubmit={(e)=>addLoan(e)} >\n            <input required value={loanData.name} name=\"name\" onChange={(e)=>onChangeHandler(e)} placeholder=\"Business Name\"/>\n            <input type=\"number\" required value={loanData.amount} name=\"amount\" onChange={(e)=>onChangeHandler(e)} placeholder=\"Loan Amount\" />\n            <select required name=\"loan types\" name=\"type\"  value={loanData.type} onChange={(e)=>dropDownChangeHandler(e)}>\n            <option value=\"DEFAULT\" disabled>Loan Type</option>\n                {optionElements}\n            </select>\n            {loanData.type===\"Other\" ? <input required value={loanData.otherType} name=\"otherType\" onChange={(e)=>{onChangeHandler(e)}} placeholder=\"Loan Type\"/>: null}\n            <button>Add Loan Request</button>\n        </form>\n        {companyLoans!==[] ? companyLoansUI: null}\n        {JSON.stringify(loans)}\n        </>\n    )\n}; \n\nexport default LoansAndData;"]},"metadata":{},"sourceType":"module"}
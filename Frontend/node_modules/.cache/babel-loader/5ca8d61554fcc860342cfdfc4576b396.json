{"ast":null,"code":"var _jsxFileName = \"/Users/jonathantaylor/Google Drive/Individual Practice Sections/ToDoList/Frontend/src/containers/listPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport Todo from '../components/todo';\nimport styled from 'styled-components';\nconst URL = 'ws://localhost:5000';\nconst StyledUl = styled.ul`\ndisplay: flex;\nflex-direction: column;\npadding: 0;\nmargin: 0;\nwidth: 100%;\n`;\nconst StyledDiv = styled.div`\ndisplay:flex;\nflex-direction: column;\nalign-items: center;\nmargin: 0 auto;\nmargin-top: 1rem;\nborder: 1px solid black;\nwidth: 20rem;\nbackground: white;\n`;\nconst StyledForm = styled.form`\ndisplay: flex;\nmargin-bottom: 1rem;\nmargin-top: 1rem;\nbackground: blue;\n`;\n\nconst ListPage = props => {\n  const [listItems, setListItems] = useState([\"hi\", \"you\", \"are\"]);\n  const [input, setInput] = useState(\"\");\n  const [ws, setWs] = useState(null);\n  useEffect(() => {\n    let ws = new WebSocket(URL);\n    setWs(ws);\n\n    ws.onopen = evt => {\n      // on connecting, do nothing but log it to the console\n      console.log('connected'); // let data = JSON.stringify({userId: userId});\n      // this.ws.send(data);\n    };\n\n    ws.onmessage = evt => {\n      // on receiving a message, add it to the list of messages\n      const listItem = JSON.parse(evt.data);\n      console.log(listItem);\n      setListItems(prev => [...prev, listItem]);\n    };\n\n    ws.onclose = () => {\n      console.log('disconnected');\n    };\n\n    return () => ws.close();\n  }, []);\n\n  const saveListItem = e => {\n    e.preventDefault();\n\n    if (input !== \"\") {\n      ws.send(input);\n      setListItems([...listItems, input]);\n      setInput(\"\");\n    }\n  };\n\n  const removeListItem = index => {\n    const updatedListItems = [...listItems];\n    updatedListItems.splice(index, 1);\n    setListItems(updatedListItems);\n  };\n\n  let todoList = listItems.map((item, index) => /*#__PURE__*/React.createElement(Todo, {\n    key: index,\n    onclick: () => removeListItem(index),\n    todo: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 49\n    }\n  }));\n  console.log(todoList);\n  return /*#__PURE__*/React.createElement(StyledDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledForm, {\n    onSubmit: e => saveListItem(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    onChange: e => setInput(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Add Todo\")), todoList.length !== 0 ? /*#__PURE__*/React.createElement(StyledUl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 32\n    }\n  }, todoList) : null);\n};\n\nexport default ListPage;","map":{"version":3,"sources":["/Users/jonathantaylor/Google Drive/Individual Practice Sections/ToDoList/Frontend/src/containers/listPage.js"],"names":["React","useState","useEffect","Todo","styled","URL","StyledUl","ul","StyledDiv","div","StyledForm","form","ListPage","props","listItems","setListItems","input","setInput","ws","setWs","WebSocket","onopen","evt","console","log","onmessage","listItem","JSON","parse","data","prev","onclose","close","saveListItem","e","preventDefault","send","removeListItem","index","updatedListItems","splice","todoList","map","item","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Todo from '../components/todo';\nimport styled from 'styled-components';\nconst URL = 'ws://localhost:5000';\n\n\nconst StyledUl = styled.ul`\ndisplay: flex;\nflex-direction: column;\npadding: 0;\nmargin: 0;\nwidth: 100%;\n`\n\nconst StyledDiv = styled.div`\ndisplay:flex;\nflex-direction: column;\nalign-items: center;\nmargin: 0 auto;\nmargin-top: 1rem;\nborder: 1px solid black;\nwidth: 20rem;\nbackground: white;\n`\n\nconst StyledForm = styled.form`\ndisplay: flex;\nmargin-bottom: 1rem;\nmargin-top: 1rem;\nbackground: blue;\n`\n\nconst ListPage = (props) => {\n\n    const [listItems, setListItems] = useState([\"hi\", \"you\", \"are\"]);\n    const [input, setInput] = useState(\"\");\n    const [ws, setWs] = useState(null);\n\n    useEffect(()=>{\n        let ws = new WebSocket(URL);\n        setWs(ws);\n        ws.onopen = (evt) => {\n            // on connecting, do nothing but log it to the console\n            console.log('connected');\n            // let data = JSON.stringify({userId: userId});\n            // this.ws.send(data);\n          }\n      \n          ws.onmessage = evt => {\n            // on receiving a message, add it to the list of messages\n            const listItem = JSON.parse(evt.data);\n            console.log(listItem);\n            setListItems(prev=> [...prev, listItem]);\n          }\n      \n          ws.onclose = () => {\n            console.log('disconnected');\n          }\n\n          return () => ws.close();\n    }, []);\n\n\n\n\n    const saveListItem = (e)=>{\n        e.preventDefault();\n        if(input!==\"\"){\n            ws.send(input);\n            setListItems([...listItems, input]);\n            setInput(\"\");\n        }\n    }\n\n    const removeListItem = (index)=>{\n        const updatedListItems = [...listItems];\n        updatedListItems.splice(index, 1);\n        setListItems(updatedListItems);\n    }\n\n    let todoList = listItems.map((item, index)=><Todo key={index} onclick={()=>removeListItem(index)} todo={item}/>)\n    console.log(todoList);\n    return(\n        <StyledDiv>\n        <StyledForm onSubmit={(e)=>saveListItem(e)}>\n            <input value={input} onChange={(e)=>setInput(e.target.value)}/>\n            <button>Add Todo</button>\n        </StyledForm>\n        {todoList.length!==0 ? <StyledUl>{todoList}</StyledUl>: null}\n      \n        </StyledDiv>\n    ) \n}; \n\nexport default ListPage;"]},"metadata":{},"sourceType":"module"}
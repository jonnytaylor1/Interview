{"ast":null,"code":"var _jsxFileName = \"/Users/jonathantaylor/Google Drive/Interview2/Frontend/src/components/addLoan.js\";\nimport React, { useContext, useState } from 'react';\nimport { loanTypeContext } from '../context';\nimport axios from 'axios';\n\nconst AddLoan = () => {\n  const {\n    loanTypes\n  } = useContext(loanTypeContext);\n  const [name, setName] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [loanType, setLoanType] = useState(\"DEFAULT\");\n  const [otherType, setOtherType] = useState(false);\n  const optionElements = loanTypes.map((loanType, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: loanType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 61\n    }\n  }, loanType));\n\n  const addLoan = async e => {\n    e.preventDefault();\n    let data = {\n      name: name,\n      amount: amount,\n      loanType: loanType\n    };\n    let response = await axios.post('http://localhost:5000/loans', data);\n    console.log(response);\n  };\n\n  const dropDownChangeHandler = e => {\n    setLoanType(e.target.value);\n\n    if (e.target.value === \"Other\") {\n      setOtherType(true);\n    } else {\n      setOtherType(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => addLoan(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: name,\n    onChange: e => setName(e.target.value),\n    placeholder: \"Business Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: amount,\n    onChange: e => setAmount(e.target.value),\n    placeholder: \"Loan Amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"loan types\",\n    value: loanType,\n    onChange: e => dropDownChangeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"DEFAULT\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Loan Type\"), optionElements), otherType ? /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Type Details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 26\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Add Loan Request\"));\n};\n\nexport default AddLoan;","map":{"version":3,"sources":["/Users/jonathantaylor/Google Drive/Interview2/Frontend/src/components/addLoan.js"],"names":["React","useContext","useState","loanTypeContext","axios","AddLoan","loanTypes","name","setName","amount","setAmount","loanType","setLoanType","otherType","setOtherType","optionElements","map","index","addLoan","e","preventDefault","data","response","post","console","log","dropDownChangeHandler","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { loanTypeContext } from '../context';\nimport axios from 'axios';\n\nconst AddLoan = () => {\n    const {loanTypes} = useContext(loanTypeContext);\n    const [name, setName] = useState(\"\");\n    const [amount, setAmount] = useState(\"\");\n    const [loanType, setLoanType] = useState(\"DEFAULT\");\n    const [otherType, setOtherType] = useState(false);\n    const optionElements = loanTypes.map((loanType, index)=><option key={index} value={loanType}>{loanType}</option>)\n\n    const addLoan = async (e)=>{\n        e.preventDefault();\n        let data = {name: name, amount: amount, loanType: loanType};\n        let response = await axios.post('http://localhost:5000/loans', data);\n        console.log(response);\n    }\n\n    const dropDownChangeHandler = (e)=>{\n        setLoanType(e.target.value);\n        if(e.target.value===\"Other\"){\n            setOtherType(true);\n        }\n        else{\n            setOtherType(false);\n        }\n    }\n\n    return(\n        <form onSubmit={(e)=>addLoan(e)} >\n            <input value={name} onChange={(e)=>setName(e.target.value)} placeholder=\"Business Name\"/>\n            <input value={amount} onChange={(e)=>setAmount(e.target.value)} placeholder=\"Loan Amount\" />\n            <select name=\"loan types\" value={loanType} onChange={(e)=>dropDownChangeHandler(e)}>\n            <option value=\"DEFAULT\" disabled>Loan Type</option>\n                {optionElements}\n            </select>\n            {otherType ? <input placeholder=\"Type Details\"/>: null}\n            <button>Add Loan Request</button>\n        </form>\n    ) \n}; \n\nexport default AddLoan;"]},"metadata":{},"sourceType":"module"}
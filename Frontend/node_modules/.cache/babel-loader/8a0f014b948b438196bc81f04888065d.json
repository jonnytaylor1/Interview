{"ast":null,"code":"var _jsxFileName = \"/Users/jonathantaylor/Google Drive/Individual Practice Sections/ToDoList/Frontend/src/containers/listPage.js\";\nimport React, { useState, useEffect, Component } from 'react';\nimport Todo from '../components/todo';\nimport styled from 'styled-components';\nconst URL = 'ws://localhost:5000';\nconst StyledUl = styled.ul`\ndisplay: flex;\nflex-direction: column;\npadding: 0;\nmargin: 0;\nwidth: 100%;\n`;\nconst StyledDiv = styled.div`\ndisplay:flex;\nflex-direction: column;\nalign-items: center;\nmargin: 0 auto;\nmargin-top: 1rem;\nborder: 1px solid black;\nwidth: 20rem;\nbackground: white;\n`;\nconst StyledForm = styled.form`\ndisplay: flex;\nmargin-bottom: 1rem;\nmargin-top: 1rem;\nbackground: blue;\n`;\n\nclass ListPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      listItems: [\"hi\", \"you\", \"are\"]\n    };\n\n    this.saveListItem = e => {\n      e.preventDefault();\n\n      if (this.state.input !== \"\") {\n        // ws.send(input);\n        this.setState({ ...this.state,\n          listItems: [...this.state.listItems, this.state.input]\n        });\n        this.setState({ ...this.state,\n          input: \"\"\n        });\n      }\n    };\n\n    this.removeListItem = index => {\n      const updatedListItems = [...this.state.listItems];\n      updatedListItems.splice(index, 1);\n      this.setState({ ...this.state,\n        listItems: updatedListItems\n      });\n    };\n\n    this.ws = new WebSocket(URL);\n  }\n\n  componentDidMount() {\n    this.ws.onopen = evt => {\n      // on connecting, do nothing but log it to the console\n      console.log('connected');\n      let data = JSON.stringify({\n        userId: 3\n      });\n      ws.send(data);\n    };\n\n    this.ws.onmessage = evt => {\n      // on receiving a message, add it to the list of messages\n      const message = JSON.parse(evt.data);\n      this.addMessage(message);\n    };\n\n    this.ws.onclose = () => {\n      console.log('disconnected');\n    };\n  }\n\n  render() {\n    let todoList = this.state.listItems.map((item, index) => /*#__PURE__*/React.createElement(Todo, {\n      key: index,\n      onclick: () => this.removeListItem(index),\n      todo: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 60\n      }\n    }));\n    return /*#__PURE__*/React.createElement(StyledDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(StyledForm, {\n      onSubmit: e => this.saveListItem(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.input,\n      onChange: e => this.setState({ ...this.state,\n        input: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"Add Todo\")), todoList.length !== 0 ? /*#__PURE__*/React.createElement(StyledUl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 32\n      }\n    }, todoList) : null);\n  }\n\n}\n\n;\nexport default ListPage;","map":{"version":3,"sources":["/Users/jonathantaylor/Google Drive/Individual Practice Sections/ToDoList/Frontend/src/containers/listPage.js"],"names":["React","useState","useEffect","Component","Todo","styled","URL","StyledUl","ul","StyledDiv","div","StyledForm","form","ListPage","constructor","props","state","input","listItems","saveListItem","e","preventDefault","setState","removeListItem","index","updatedListItems","splice","ws","WebSocket","componentDidMount","onopen","evt","console","log","data","JSON","stringify","userId","send","onmessage","message","parse","addMessage","onclose","render","todoList","map","item","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\nimport Todo from '../components/todo';\nimport styled from 'styled-components';\nconst URL = 'ws://localhost:5000'\n\n\nconst StyledUl = styled.ul`\ndisplay: flex;\nflex-direction: column;\npadding: 0;\nmargin: 0;\nwidth: 100%;\n`\n\nconst StyledDiv = styled.div`\ndisplay:flex;\nflex-direction: column;\nalign-items: center;\nmargin: 0 auto;\nmargin-top: 1rem;\nborder: 1px solid black;\nwidth: 20rem;\nbackground: white;\n`\n\nconst StyledForm = styled.form`\ndisplay: flex;\nmargin-bottom: 1rem;\nmargin-top: 1rem;\nbackground: blue;\n`\n\nclass ListPage extends Component {\n\n    state = {\n        input: '',\n        listItems: [\"hi\", \"you\", \"are\"]\n    }\n    constructor(props) {\n        super(props);\n        this.ws = new WebSocket(URL);\n    }\n\n\n    componentDidMount() {\n        this.ws.onopen = (evt) => {\n            // on connecting, do nothing but log it to the console\n            console.log('connected');\n            let data = JSON.stringify({userId: 3});\n            ws.send(data);\n          }\n      \n          this.ws.onmessage = evt => {\n            // on receiving a message, add it to the list of messages\n            const message = JSON.parse(evt.data)\n            this.addMessage(message)\n          }\n      \n          this.ws.onclose = () => {\n            console.log('disconnected')\n          }\n        }\n\n\n\n\n    saveListItem = (e)=>{\n        e.preventDefault();\n        if(this.state.input!==\"\"){\n            // ws.send(input);\n            this.setState({...this.state, listItems: [...this.state.listItems, this.state.input]});\n            this.setState({...this.state, input: \"\"});\n        }\n    }\n\n    removeListItem = (index)=>{\n        const updatedListItems = [...this.state.listItems];\n        updatedListItems.splice(index, 1);\n        this.setState({...this.state, listItems: updatedListItems});\n    }\n\n    render(){\n    \n    let todoList = this.state.listItems.map((item, index)=><Todo key={index} onclick={()=>this.removeListItem(index)} todo={item}/>)\n\n    return(\n        <StyledDiv>\n        <StyledForm onSubmit={(e)=>this.saveListItem(e)}>\n            <input value={this.state.input} onChange={(e)=>this.setState({...this.state, input: e.target.value})}/>\n            <button>Add Todo</button>\n        </StyledForm>\n        {todoList.length!==0 ? <StyledUl>{todoList}</StyledUl>: null}\n      \n        </StyledDiv>\n    )}\n}; \n\nexport default ListPage;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jonathantaylor/Google Drive/Interview2/Frontend/src/containers/LoansAndData.js\";\nimport React, { useState, useContext, Component } from 'react';\nimport axios from 'axios';\nimport { loanTypeContext, companyLoanContext } from '../context';\nimport Company from '../components/company';\nimport InputAndError from '../components/inputAndError';\nimport SelectAndError from '../components/selectAndError';\nimport LoanRequest from '../components/loanInfo';\nimport styled from 'styled-components';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { average, tags, loanAmounts, bandCounter2, loanBandCounter, frequencyAndTotal } from '../calculationFunctions';\nimport Chart from \"react-apexcharts\";\nimport { loanTypes, initialChartConfig } from '../config';\nconst StyledUl = styled.ul`\ndisplay: flex;\nflex-direction: column;\nwidth: 400px;\nmargin-top: 5rem;\n`;\nconst StyledChart = styled(Chart)`\nborder: black solid 1px;\nmargin: 4rem;\nwidth: 700px;\n`;\n\nclass LoansAndData extends Component {\n  constructor(props) {\n    super(props);\n    this.initialFormData = {\n      name: \"\",\n      amount: \"\",\n      type: \"DEFAULT\",\n      otherType: \"\"\n    };\n    this.state = {\n      chartConfig: initialChartConfig,\n      companies: [],\n      loanTypes: loanTypes,\n      loanData: this.initialFormData,\n      inputValidated: {\n        name: false,\n        amount: false,\n        type: false,\n        otherType: true\n      },\n      inputClicked: {\n        name: false,\n        amount: false,\n        type: false,\n        otherType: false\n      },\n      calculationsData: {}\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const {\n      companyLoanDetails,\n      setCompanyLoanDetails\n    } = this.context; // const history = useHistory();\n\n    useEffect(() => {\n      getCompanies();\n    }, []);\n\n    const getCompanies = async () => {\n      let response = await axios.get('http://localhost:5000/loans');\n      this.setState({ ...this.state,\n        companies: response.data.companies\n      });\n      let response2 = frequencyAndTotal(loanTypes, response.data.companies);\n      let dataTypes = Object.keys(response2);\n      let frequencyAndTotals = Object.values(response2);\n      let averages = frequencyAndTotals.map(data => data.frequency !== 0 ? data.totalAmount / data.frequency : 0);\n      let typeFrequencies = frequencyAndTotals.map(data => data.frequency);\n      this.setState({ ...this.state,\n        calculationsData: {\n          averages: averages,\n          frequencies: typeFrequencies\n        }\n      });\n      this.setState({ ...this.state.chartConfig,\n        options: { ...this.state.options,\n          xaxis: {\n            categories: [dataTypes]\n          }\n        },\n        series: { ...this.state.chartConfig.series,\n          name: \"Averages\",\n          data: [averages]\n        }\n      });\n    };\n\n    const addLoan = async e => {\n      e.preventDefault();\n      let data = {\n        name: this.state.loanData.name,\n        amount: this.state.loanData.amount,\n        type: this.state.loanData.type,\n        otherType: this.state.loanData.otherType\n      };\n      await axios.post('http://localhost:5000/loans', data);\n      this.setState({ ...this.state,\n        loanData: this.initialFormData\n      });\n      getCompanies();\n    };\n\n    const dropDownChangeHandler = e => {\n      let {\n        value\n      } = e.target;\n\n      if (value === \"Other\") {\n        this.setState({ ...this.state,\n          loanData: this.initialFormData,\n          type: value\n        });\n        this.setState({ ...this.state,\n          inputValidated: { ...this.state.inputValidated,\n            otherType: false\n          }\n        });\n      } else {\n        this.setState({ ...this.state,\n          loanData: { ...this.state.loanData,\n            type: value,\n            otherType: \"\"\n          }\n        });\n        this.setState({ ...this.state,\n          inputValidated: { ...this.state.inputValidated,\n            otherType: true\n          }\n        });\n      }\n    };\n\n    const onChangeHandler = e => {\n      let {\n        name,\n        value\n      } = e.target;\n      this.setState({ ...this.state,\n        loanData: { ...this.state.loanData,\n          [name]: value\n        }\n      });\n    };\n\n    const showLoanDetails = companyId => {\n      let clickedCompany = this.state.companies.find(company => company._id === companyId);\n      setCompanyLoanDetails(clickedCompany); // history.push('/details');\n    };\n\n    const deleteCompany = async companyId => {\n      await axios.delete('http://localhost:5000/loans/' + companyId);\n      let updatedCompanies = [...this.state.companies].filter(company => company._id !== companyId);\n      this.setState({ ...this.state,\n        companies: updatedCompanies\n      });\n    };\n\n    const inputUsed = name => {\n      if (this.state.inputClicked[name] === false) {\n        this.state({ ...this.state,\n          inputClicked: { ...this.state.inputClicked,\n            [name]: true\n          }\n        });\n      }\n    };\n\n    const onBlurHandler = e => {\n      let {\n        name,\n        value\n      } = e.target;\n      inputUsed(name);\n      isFieldValid(name, value);\n    };\n\n    const isFieldValid = (name, value) => {\n      let validator = true;\n\n      if (value === \"\") {\n        validator = \"Please insert a value\";\n        this.setState({ ...this.state,\n          inputValidated: { ...this.state.inputValidated,\n            [name]: validator\n          }\n        });\n        return;\n      }\n\n      switch (name) {\n        case \"type\":\n          if (value === \"DEFAULT\") {\n            validator = \"Please choose a type\";\n          }\n\n          break;\n\n        case \"amount\":\n          console.log(name);\n\n          if (value < 15000) {\n            validator = \"Please insert an amount greater than Â£15000\";\n          } else if (value % 1000 !== 0) {\n            validator = \"Please insert an amount that is a multiple of 1000\";\n          }\n\n          break;\n      }\n\n      this.setState({ ...this.state,\n        inputValidated: { ...this.state.inputValidated,\n          [name]: validator\n        }\n      });\n    };\n\n    let formValid = () => {\n      for (let key in this.state.inputValidated) {\n        if (this.state.inputValidated[key] !== true) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    const changeGraph = e => {\n      switch (e.target.name) {\n        case \"average\":\n          this.setState({ ...this.state.chartConfig,\n            series: { ...this.state.chartConfig.series,\n              name: \"Averages\",\n              data: this.state.calculationsData.averages\n            }\n          });\n          break;\n\n        case \"frequencyType\":\n          this.setState({ ...this.state.chartConfig,\n            series: { ...this.state.chartConfig.series,\n              name: \"Frequencies\",\n              data: this.state.calculationsData.averages\n            }\n          });\n          break;\n\n        default:\n          console.log(\"error\");\n      }\n    };\n\n    let companiesUI;\n\n    if (this.state.companies !== []) {\n      companiesUI = this.state.companies.map(company => {\n        return /*#__PURE__*/React.createElement(Company, {\n          showLoanDetails: () => showLoanDetails(company._id),\n          key: company._id,\n          name: company.name,\n          deleteCompany: () => deleteCompany(company._id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 20\n          }\n        }, company.loans.map(loan => /*#__PURE__*/React.createElement(LoanRequest, {\n          amount: loan.amount,\n          type: loan.type,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 45\n          }\n        })));\n      });\n    }\n\n    const optionElements = [/*#__PURE__*/React.createElement(\"option\", {\n      key: \"-1\",\n      value: \"DEFAULT\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 29\n      }\n    }, \"Loan Type\"), loanTypes.map((loanType, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: loanType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 124\n      }\n    }, loanType))];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => addLoan(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputAndError, {\n      id: \"nameInput\",\n      label: \"Name\",\n      name: \"name\",\n      value: this.state.loanData.name,\n      onChange: e => onChangeHandler(e),\n      onBlur: e => onBlurHandler(e),\n      errorMessage: this.state.inputValidated.name,\n      inputClicked: this.state.inputClicked.name,\n      inputValidated: this.state.inputValidated.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(InputAndError, {\n      id: \"amountInput\",\n      label: \"Amount\",\n      name: \"amount\",\n      value: this.state.loanData.amount,\n      onChange: e => onChangeHandler(e),\n      onBlur: e => onBlurHandler(e),\n      errorMessage: this.state.inputValidated.amount,\n      inputClicked: this.state.inputClicked.amount,\n      inputValidated: this.state.inputValidated.amount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(SelectAndError, {\n      id: \"loanType\",\n      label: \"Type\",\n      onBlur: e => onBlurHandler(e),\n      required: true,\n      name: \"type\",\n      value: this.state.loanData.type,\n      onChange: e => dropDownChangeHandler(e),\n      errorMessage: this.state.inputValidated.type,\n      inputClicked: this.state.inputClicked.type,\n      inputValidated: this.state.inputValidated.type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, optionElements), this.state.loanData.type === \"Other\" ? /*#__PURE__*/React.createElement(InputAndError, {\n      id: \"otherType\",\n      label: \"Other Type\",\n      name: \"otherType\",\n      value: this.state.loanData.otherType,\n      onChange: e => onChangeHandler(e),\n      onBlur: e => onBlurHandler(e),\n      errorMessage: this.state.inputValidated.otherType,\n      inputClicked: this.state.inputClicked.otherType,\n      inputValidated: this.state.inputValidated.otherType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"button\", {\n      disabled: !formValid(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, \"Add Loan Request\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    }, \"Businesses\"), this.state.companies !== [] ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, \"Click Business to Show Further Details\"), /*#__PURE__*/React.createElement(StyledUl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, companiesUI)) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 16\n      }\n    }, \"Currently no businesses\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      name: \"average\",\n      onClick: e => changeGraph(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, \"Average of Each Loan Type\"), /*#__PURE__*/React.createElement(\"button\", {\n      name: \"frequencyType\",\n      onClick: e => changeGraph(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }, \"Frequency of Each Loan Type\"), /*#__PURE__*/React.createElement(\"button\", {\n      name: \"frequencyBands\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }\n    }, \"Frequency of Loans in Each Band\")), /*#__PURE__*/React.createElement(Chart, {\n      options: this.state.chartConfig.options,\n      series: this.state.chartConfig.series,\n      type: \"bar\",\n      width: \"700\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nLoansAndData.contextType = companyLoanContext;\nexport default LoansAndData;","map":{"version":3,"sources":["/Users/jonathantaylor/Google Drive/Interview2/Frontend/src/containers/LoansAndData.js"],"names":["React","useState","useContext","Component","axios","loanTypeContext","companyLoanContext","Company","InputAndError","SelectAndError","LoanRequest","styled","Redirect","useHistory","average","tags","loanAmounts","bandCounter2","loanBandCounter","frequencyAndTotal","Chart","loanTypes","initialChartConfig","StyledUl","ul","StyledChart","LoansAndData","constructor","props","initialFormData","name","amount","type","otherType","state","chartConfig","companies","loanData","inputValidated","inputClicked","calculationsData","componentDidMount","render","companyLoanDetails","setCompanyLoanDetails","context","useEffect","getCompanies","response","get","setState","data","response2","dataTypes","Object","keys","frequencyAndTotals","values","averages","map","frequency","totalAmount","typeFrequencies","frequencies","options","xaxis","categories","series","addLoan","e","preventDefault","post","dropDownChangeHandler","value","target","onChangeHandler","showLoanDetails","companyId","clickedCompany","find","company","_id","deleteCompany","delete","updatedCompanies","filter","inputUsed","onBlurHandler","isFieldValid","validator","console","log","formValid","key","changeGraph","companiesUI","loans","loan","optionElements","loanType","index","contextType"],"mappings":"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","sourcesContent":["import React, {  useState, useContext, Component } from 'react';\nimport axios from 'axios';\nimport { loanTypeContext, companyLoanContext } from '../context';\nimport Company from '../components/company';\nimport InputAndError from '../components/inputAndError';\nimport SelectAndError from '../components/selectAndError';\nimport LoanRequest from '../components/loanInfo';\nimport styled from 'styled-components';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { average, tags, loanAmounts, bandCounter2, loanBandCounter, frequencyAndTotal } from '../calculationFunctions';\nimport Chart from \"react-apexcharts\";\nimport { loanTypes, initialChartConfig } from '../config';\n\nconst StyledUl = styled.ul`\ndisplay: flex;\nflex-direction: column;\nwidth: 400px;\nmargin-top: 5rem;\n`\n\nconst StyledChart = styled(Chart)`\nborder: black solid 1px;\nmargin: 4rem;\nwidth: 700px;\n`\n\nclass LoansAndData extends Component {\n    static contextType = companyLoanContext\n\n    constructor(props) {\n        super(props);\n        \n        this.initialFormData = {name: \"\", amount: \"\", type: \"DEFAULT\", otherType: \"\"};\n\n        this.state = {\n            chartConfig: initialChartConfig,\n            companies: [],\n            loanTypes: loanTypes,\n            loanData: this.initialFormData,\n            inputValidated: {name: false, amount: false, type: false, otherType: true},\n            inputClicked: {name: false, amount: false, type: false, otherType: false},\n            calculationsData: {},\n\n        }\n    }\n    \n    componentDidMount(){\n    }\n\n\n\n    render(){\n        const { companyLoanDetails, setCompanyLoanDetails } = this.context\n        // const history = useHistory();\n\n    useEffect(()=> {\n        getCompanies();\n    }, [])\n\n    const getCompanies = async ()=>{\n        let response = await axios.get('http://localhost:5000/loans');\n        this.setState({...this.state, companies: response.data.companies});\n        let response2 = frequencyAndTotal(loanTypes, response.data.companies);\n        let dataTypes = Object.keys(response2);\n        let frequencyAndTotals = Object.values(response2)\n        let averages = frequencyAndTotals.map(data=> data.frequency !== 0 ? data.totalAmount/data.frequency : 0);\n        let typeFrequencies = frequencyAndTotals.map(data=>data.frequency);\n        this.setState({...this.state, calculationsData: {averages: averages, frequencies: typeFrequencies}});\n        this.setState({...this.state.chartConfig, options: {...this.state.options, xaxis: {categories: [dataTypes]}}, series: {...this.state.chartConfig.series, name: \"Averages\", data: [averages]}})\n    }\n\n   \n    \n\n    const addLoan = async (e)=>{\n        e.preventDefault();\n        let data = {name: this.state.loanData.name, amount: this.state.loanData.amount, type: this.state.loanData.type, otherType: this.state.loanData.otherType};\n        await axios.post('http://localhost:5000/loans', data);\n        this.setState({...this.state, loanData: this.initialFormData});\n        getCompanies();        \n    }\n\n    const dropDownChangeHandler = (e)=>{\n        let {value} = e.target;\n        if(value===\"Other\"){\n            this.setState({...this.state, loanData: this.initialFormData, type: value})\n            this.setState({...this.state, inputValidated: {...this.state.inputValidated, otherType: false}});\n        }\n        else{\n            this.setState({...this.state, loanData: {...this.state.loanData, type: value, otherType: \"\"}});\n            this.setState({...this.state, inputValidated: {...this.state.inputValidated, otherType: true}});\n        }\n    }\n\n    const onChangeHandler = (e)=>{\n        let {name, value} = e.target;\n        this.setState({...this.state, loanData: {...this.state.loanData, [name]: value}});\n    }\n\n    const showLoanDetails = (companyId)=>{\n        let clickedCompany = this.state.companies.find(company=> company._id===companyId);\n        setCompanyLoanDetails(clickedCompany);\n        // history.push('/details');\n        \n    }\n    const deleteCompany = async (companyId)=>{\n        await axios.delete('http://localhost:5000/loans/' + companyId);\n        let updatedCompanies = [...this.state.companies].filter(company=>company._id!==companyId);\n        this.setState({...this.state, companies: updatedCompanies});\n    }\n\n    const inputUsed = (name)=>{\n        if(this.state.inputClicked[name]===false){\n            this.state({...this.state, inputClicked: {...this.state.inputClicked, [name]: true}});\n        }\n    }\n\n    const onBlurHandler = (e)=>{\n        let {name, value} = e.target;\n        inputUsed(name);\n        isFieldValid(name, value);\n    }\n\n    const isFieldValid = (name, value)=>{\n        let validator = true;\n        if(value===\"\"){\n            validator = \"Please insert a value\";\n            this.setState({...this.state, inputValidated: {...this.state.inputValidated, [name]: validator}});\n            return\n        }\n\n        switch(name) {\n\n        case \"type\":\n            if(value===\"DEFAULT\"){\n                validator = \"Please choose a type\"\n            }\n            break;\n\n        case \"amount\":\n            console.log(name);\n            if(value < 15000){\n                validator = \"Please insert an amount greater than Â£15000\"\n            }\n            else if(value%1000!==0){\n                validator = \"Please insert an amount that is a multiple of 1000\"  \n            }   \n            break;     \n    }\n    this.setState({...this.state, inputValidated: {...this.state.inputValidated, [name]: validator}});\n}\n\nlet formValid = ()=>{\n    for (let key in this.state.inputValidated){\n        if(this.state.inputValidated[key]!==true){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst changeGraph=(e)=>{\n    switch (e.target.name){\n        case \"average\":\n            this.setState({...this.state.chartConfig, series: {...this.state.chartConfig.series, name: \"Averages\", data: this.state.calculationsData.averages}});\n            break;\n        case \"frequencyType\":\n            this.setState({...this.state.chartConfig, series: {...this.state.chartConfig.series, name: \"Frequencies\", data: this.state.calculationsData.averages}});\n            break;\n        default:\n            console.log(\"error\");       \n    }\n}\n\n\n  let companiesUI;\n    if(this.state.companies!==[]){\n        companiesUI = this.state.companies.map(company=>{\n            return <Company showLoanDetails={()=>showLoanDetails(company._id)} key={company._id} name = {company.name} deleteCompany={()=>deleteCompany(company._id)}>\n                {company.loans.map((loan)=> <LoanRequest amount={loan.amount} type={loan.type}/>)}\n            </Company>\n        })\n    }\n   \n    const optionElements = [<option key=\"-1\" value=\"DEFAULT\" disabled>Loan Type</option>, loanTypes.map((loanType, index)=><option key={index} value={loanType}>{loanType}</option>)];\n\n    return(\n        <>\n        <form onSubmit={(e)=>addLoan(e)} >\n            <InputAndError id=\"nameInput\" label=\"Name\" name=\"name\" value={this.state.loanData.name} onChange={(e)=>onChangeHandler(e)} onBlur={(e)=>onBlurHandler(e)} errorMessage={this.state.inputValidated.name} inputClicked={this.state.inputClicked.name} inputValidated={this.state.inputValidated.name}/>\n            <InputAndError id=\"amountInput\" label=\"Amount\" name=\"amount\" value={this.state.loanData.amount} onChange={(e)=>onChangeHandler(e)} onBlur={(e)=>onBlurHandler(e)} errorMessage={this.state.inputValidated.amount} inputClicked={this.state.inputClicked.amount} inputValidated={this.state.inputValidated.amount}/>\n            <SelectAndError id=\"loanType\" label=\"Type\" onBlur={(e)=>onBlurHandler(e)} required name=\"type\" value={this.state.loanData.type} onChange={(e)=>dropDownChangeHandler(e)} errorMessage={this.state.inputValidated.type} inputClicked={this.state.inputClicked.type} inputValidated={this.state.inputValidated.type}>\n                {optionElements}\n            </SelectAndError>\n            {this.state.loanData.type===\"Other\" ? \n            <InputAndError id=\"otherType\" label=\"Other Type\" name=\"otherType\" value={this.state.loanData.otherType} onChange={(e)=>onChangeHandler(e)} onBlur={(e)=>onBlurHandler(e)} errorMessage={this.state.inputValidated.otherType} inputClicked={this.state.inputClicked.otherType} inputValidated={this.state.inputValidated.otherType}/>\n            : null}\n            <button disabled={!formValid()}>Add Loan Request</button>\n        </form>\n        <div>\n            <h1>Businesses</h1>\n            \n            {this.state.companies!==[] ?\n            <> \n            <p>Click Business to Show Further Details</p>\n            <StyledUl>{companiesUI}</StyledUl>\n            </>\n             : <p>Currently no businesses</p>}\n        </div>\n            <div>\n                <div>\n                    <button name=\"average\" onClick={(e)=>changeGraph(e)}>Average of Each Loan Type</button>  \n                    <button name=\"frequencyType\" onClick={(e)=>changeGraph(e)}>Frequency of Each Loan Type</button>\n                    <button name=\"frequencyBands\">Frequency of Loans in Each Band</button>\n                </div>\n                <Chart\n                    options={this.state.chartConfig.options}\n                    series={this.state.chartConfig.series}\n                    type=\"bar\"\n                    width=\"700\"\n                    />\n            </div>\n        </>\n    )\n}; \n}\n\nexport default LoansAndData;"]},"metadata":{},"sourceType":"module"}
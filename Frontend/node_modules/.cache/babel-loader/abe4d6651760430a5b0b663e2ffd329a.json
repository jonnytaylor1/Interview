{"ast":null,"code":"var _jsxFileName = \"/Users/jonathantaylor/Google Drive/Interview/ToDoList copy/Frontend/src/containers/calculationsPage.js\";\nimport React from 'react';\nimport BusinessCalculations from '../components/businessCalculations';\n\nconst CalculationsPage = ({\n  businessInfo\n}) => {\n  const types = [\"Acquire a new vehicle for my business\", \"Acquire a new piece of equipment\", \"Buy a property and to rent it out\", \"Buy another business\", \"Export overseas\", \"Recruit new staff\", \"Other\"];\n\n  const average = type => {\n    let number = 0;\n    let total = 0;\n    businessInfo.forEach(business => {\n      if (business.type === type) {\n        total += business.amount;\n        number += 1;\n      }\n    });\n    let averageLoan = total / number;\n    return averageLoan;\n  };\n\n  let loanTypeTotal = (type, businessInfo) => {\n    let occurs = 0;\n    businessInfo.forEach(business => {\n      if (business.type === type) {\n        occurs += 1;\n      }\n    });\n    return occurs;\n  };\n\n  const businessCalcUI = types.map(type => {\n    let typeAverage = average(type);\n    console.log(typeAverage);\n    let typeTotal = loanTypeTotal(type);\n    return /*#__PURE__*/React.createElement(BusinessCalculations, {\n      type: type,\n      average: typeAverage,\n      total: typeTotal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }\n    });\n  });\n  return [businessCalcUI];\n};\n\nexport default CalculationsPage;","map":{"version":3,"sources":["/Users/jonathantaylor/Google Drive/Interview/ToDoList copy/Frontend/src/containers/calculationsPage.js"],"names":["React","BusinessCalculations","CalculationsPage","businessInfo","types","average","type","number","total","forEach","business","amount","averageLoan","loanTypeTotal","occurs","businessCalcUI","map","typeAverage","console","log","typeTotal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,oBAAP,MAAiC,oCAAjC;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAoB;AAEzC,QAAMC,KAAK,GAAG,CAAC,uCAAD,EAAyC,kCAAzC,EAA4E,mCAA5E,EAAgH,sBAAhH,EAAuI,iBAAvI,EAAyJ,mBAAzJ,EAA6K,OAA7K,CAAd;;AAEA,QAAMC,OAAO,GAAGC,IAAD,IAAQ;AACnB,QAAIC,MAAM,GAAE,CAAZ;AACA,QAAIC,KAAK,GAAG,CAAZ;AACAL,IAAAA,YAAY,CAACM,OAAb,CAAqBC,QAAQ,IAAI;AAC7B,UAAGA,QAAQ,CAACJ,IAAT,KAAkBA,IAArB,EAA0B;AACtBE,QAAAA,KAAK,IAAIE,QAAQ,CAACC,MAAlB;AACAJ,QAAAA,MAAM,IAAI,CAAV;AACH;AACJ,KALD;AAMA,QAAIK,WAAW,GAAGJ,KAAK,GAACD,MAAxB;AAEA,WAAOK,WAAP;AACH,GAZD;;AAcA,MAAIC,aAAa,GAAG,CAACP,IAAD,EAAOH,YAAP,KAAsB;AACtC,QAAIW,MAAM,GAAG,CAAb;AACAX,IAAAA,YAAY,CAACM,OAAb,CAAqBC,QAAQ,IAAI;AAC7B,UAAGA,QAAQ,CAACJ,IAAT,KAAkBA,IAArB,EAA0B;AACtBQ,QAAAA,MAAM,IAAE,CAAR;AACH;AACJ,KAJD;AAKA,WAAOA,MAAP;AACC,GARL;;AAUA,QAAMC,cAAc,GAAGX,KAAK,CAACY,GAAN,CAAUV,IAAI,IAAG;AACpC,QAAIW,WAAW,GAAGZ,OAAO,CAACC,IAAD,CAAzB;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,QAAIG,SAAS,GAAGP,aAAa,CAACP,IAAD,CAA7B;AACA,wBAAO,oBAAC,oBAAD;AAAsB,MAAA,IAAI,EAAEA,IAA5B;AAAmC,MAAA,OAAO,EAAEW,WAA5C;AAAyD,MAAA,KAAK,EAAIG,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACP,GAL0B,CAAvB;AAQA,SACI,CAACL,cAAD,CADJ;AAGH,CAvCD;;AAyCA,eAAeb,gBAAf","sourcesContent":["import React from 'react';\nimport BusinessCalculations from '../components/businessCalculations';\n\nconst CalculationsPage = ({businessInfo}) => {\n\n    const types = [\"Acquire a new vehicle for my business\",\"Acquire a new piece of equipment\",\"Buy a property and to rent it out\",\"Buy another business\",\"Export overseas\",\"Recruit new staff\",\"Other\"];\n\n    const average= (type)=>{\n        let number =0;\n        let total = 0;\n        businessInfo.forEach(business => {\n            if(business.type === type){\n                total += business.amount;\n                number += 1;\n            }\n        });\n        let averageLoan = total/number;\n    \n        return averageLoan;\n    }\n    \n    let loanTypeTotal = (type, businessInfo)=>{\n        let occurs = 0;\n        businessInfo.forEach(business => {\n            if(business.type === type){\n                occurs+=1;\n            }\n        });\n        return occurs;\n        }\n\n    const businessCalcUI = types.map(type=> {\n        let typeAverage = average(type);\n        console.log(typeAverage);\n        let typeTotal = loanTypeTotal(type);\n        return(<BusinessCalculations type={type}  average={typeAverage} total = {typeTotal}/>)\n})\n\n\n    return (\n        [businessCalcUI]\n    )\n}; \n\nexport default CalculationsPage;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export const average = (loanTypes, info) => {\n  //Return {\"type\": {frequency: frequency, totalAmount: totalAmount}, \"type\": [frequency, totalAmount]}\n  let dataObject = {};\n  loanTypes.forEach(loanType => {\n    dataObject[loanType] = {\n      frequency: 0,\n      totalAmount: 0\n    };\n  });\n  info.forEach(business => {\n    business.loans.forEach(loan => {\n      dataObject[loan.type].frequency = dataObject[loan.type].frequency + loan.amount;\n      dataObject[loan.type].totalAmount = dataObject[loan.type].totalAmount + 1;\n    });\n  });\n};\nexport const loanBandCounter = companies => {\n  let bandCounter = {\n    15000: 0,\n    25000: 0,\n    50000: 0,\n    100000: 0,\n    250000: 0,\n    500000: 0,\n    750000: 0,\n    1000000: 0,\n    2000000: 0\n  };\n  let bands = Object.keys(bandCounter);\n  companies.forEach(company => {\n    company.loans.forEach(loan => {\n      for (let i = bands.length - 1; i >= 0; i--) {\n        if (loan.amount >= bands[i]) {\n          bandCounter[bands[i]] += 1;\n          return;\n        }\n      }\n    });\n  });\n  return bandCounter;\n};","map":{"version":3,"sources":["/Users/jonathantaylor/Google Drive/Interview2/Frontend/src/calculationFunctions.js"],"names":["average","loanTypes","info","dataObject","forEach","loanType","frequency","totalAmount","business","loans","loan","type","amount","loanBandCounter","companies","bandCounter","bands","Object","keys","company","i","length"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAE,CAACC,SAAD,EAAYC,IAAZ,KAAmB;AACvC;AACA,MAAIC,UAAU,GAAG,EAAjB;AAEAF,EAAAA,SAAS,CAACG,OAAV,CAAkBC,QAAQ,IAAE;AAC1BF,IAAAA,UAAU,CAACE,QAAD,CAAV,GAAuB;AAACC,MAAAA,SAAS,EAAE,CAAZ;AAAeC,MAAAA,WAAW,EAAE;AAA5B,KAAvB;AACD,GAFD;AAIEL,EAAAA,IAAI,CAACE,OAAL,CAAaI,QAAQ,IAAI;AACrBA,IAAAA,QAAQ,CAACC,KAAT,CAAeL,OAAf,CAAuBM,IAAI,IAAE;AAC3BP,MAAAA,UAAU,CAACO,IAAI,CAACC,IAAN,CAAV,CAAsBL,SAAtB,GAAkCH,UAAU,CAACO,IAAI,CAACC,IAAN,CAAV,CAAsBL,SAAtB,GAAkCI,IAAI,CAACE,MAAzE;AACAT,MAAAA,UAAU,CAACO,IAAI,CAACC,IAAN,CAAV,CAAsBJ,WAAtB,GAAoCJ,UAAU,CAACO,IAAI,CAACC,IAAN,CAAV,CAAsBJ,WAAtB,GAAoC,CAAxE;AACD,KAHD;AAID,GALH;AAMH,CAdM;AAkBP,OAAO,MAAMM,eAAe,GAAIC,SAAD,IAAa;AACxC,MAAIC,WAAW,GAAG;AAAC,WAAO,CAAR;AAAW,WAAO,CAAlB;AAAqB,WAAO,CAA5B;AAA+B,YAAQ,CAAvC;AAA0C,YAAQ,CAAlD;AAAqD,YAAQ,CAA7D;AAAgE,YAAQ,CAAxE;AAA2E,aAAS,CAApF;AAAuF,aAAS;AAAhG,GAAlB;AACA,MAAIC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYH,WAAZ,CAAZ;AACAD,EAAAA,SAAS,CAACV,OAAV,CAAkBe,OAAO,IAAE;AACzBA,IAAAA,OAAO,CAACV,KAAR,CAAcL,OAAd,CAAsBM,IAAI,IAAE;AACxB,WAAI,IAAIU,CAAC,GAACJ,KAAK,CAACK,MAAN,GAAa,CAAvB,EAA0BD,CAAC,IAAE,CAA7B,EAAgCA,CAAC,EAAjC,EAAoC;AAChC,YAAGV,IAAI,CAACE,MAAL,IAAeI,KAAK,CAACI,CAAD,CAAvB,EAA4B;AACxBL,UAAAA,WAAW,CAACC,KAAK,CAACI,CAAD,CAAN,CAAX,IAAyB,CAAzB;AACA;AACP;AACF;AACJ,KAPC;AAQL,GATG;AAUJ,SAAOL,WAAP;AAAmB,CAbZ","sourcesContent":["export const average= (loanTypes, info)=>{\n  //Return {\"type\": {frequency: frequency, totalAmount: totalAmount}, \"type\": [frequency, totalAmount]}\n  let dataObject = {};\n  \n  loanTypes.forEach(loanType=>{\n    dataObject[loanType] = {frequency: 0, totalAmount: 0}\n  })\n\n    info.forEach(business => {\n        business.loans.forEach(loan=>{\n          dataObject[loan.type].frequency = dataObject[loan.type].frequency + loan.amount;\n          dataObject[loan.type].totalAmount = dataObject[loan.type].totalAmount + 1;\n        })\n      })\n}\n\n\n \nexport const loanBandCounter = (companies)=>{\n    let bandCounter = {15000: 0, 25000: 0, 50000: 0, 100000: 0, 250000: 0, 500000: 0, 750000: 0, 1000000: 0, 2000000: 0};\n    let bands = Object.keys(bandCounter);\n    companies.forEach(company=>{\n      company.loans.forEach(loan=>{\n          for(let i=bands.length-1; i>=0; i--){\n              if(loan.amount >= bands[i]) {\n                  bandCounter[bands[i]] += 1;\n                  return;\n          }\n        }\n    })\n})\nreturn bandCounter}\n\n\n\n"]},"metadata":{},"sourceType":"module"}
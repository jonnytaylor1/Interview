{"ast":null,"code":"var _jsxFileName = \"/Users/jonathantaylor/Google Drive/Interview2/Frontend/src/containers/LoansAndData.js\";\nimport React, { useEffect, useState, useContext, Component } from 'react';\nimport axios from 'axios';\nimport { loanTypeContext, companyLoanContext } from '../context';\nimport Company from '../components/company';\nimport InputAndError from '../components/inputAndError';\nimport SelectAndError from '../components/selectAndError';\nimport LoanRequest from '../components/loanInfo';\nimport styled from 'styled-components';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { average, tags, loanAmounts, bandCounter2, loanBandCounter, frequencyAndTotal } from '../calculationFunctions';\nimport Chart from \"react-apexcharts\";\nimport { loanTypes, initialChartConfig } from '../config';\nconst StyledUl = styled.ul`\ndisplay: flex;\nflex-direction: column;\nwidth: 400px;\nmargin-top: 5rem;\n`;\nconst StyledChart = styled(Chart)`\nborder: black solid 1px;\nmargin: 4rem;\nwidth: 700px;\n`;\n\nclass LoansAndData extends Component {\n  constructor(props) {\n    super(props);\n    this.initialFormData = {\n      name: \"\",\n      amount: \"\",\n      type: \"DEFAULT\",\n      otherType: \"\"\n    };\n    this.state = {\n      chartConfig: initialChartConfig,\n      companies: [],\n      loanTypes: loanTypes,\n      loanData: this.initialFormData,\n      inputValidated: {\n        name: false,\n        amount: false,\n        type: false,\n        otherType: true\n      },\n      inputClicked: {\n        name: false,\n        amount: false,\n        type: false,\n        otherType: false\n      },\n      calculationData: {}\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Hello\");\n  }\n\n  render() {\n    const {\n      companyLoanDetails,\n      setCompanyLoanDetails\n    } = this.context;\n    const history = useHistory();\n    useEffect(() => {\n      getCompanies();\n    }, []);\n\n    const getCompanies = async () => {\n      let response = await axios.get('http://localhost:5000/loans');\n      this.setState({ ...this.state,\n        companies: response.data.companies\n      });\n      let response2 = frequencyAndTotal(loanTypes, response.data.companies);\n      let dataTypes = Object.keys(response2);\n      let frequencyAndTotals = Object.values(response2);\n      let averages = frequencyAndTotals.map(data => data.frequency !== 0 ? data.totalAmount / data.frequency : 0);\n      let typeFrequencies = frequencyAndTotals.map(data => data.frequency);\n      setData({\n        averages: averages,\n        frequencies: typeFrequencies\n      });\n      setChartConfig({\n        options: {\n          plotOptions: {\n            bar: {\n              distributed: true\n            }\n          },\n          legend: {\n            show: false\n          },\n          chart: {\n            id: \"basic-bar\"\n          },\n          xaxis: {\n            categories: [dataTypes]\n          }\n        },\n        series: [{\n          name: \"\",\n          data: [averages]\n        }]\n      });\n    };\n\n    const addLoan = async e => {\n      e.preventDefault();\n      let data = {\n        name: loanData.name,\n        amount: loanData.amount,\n        type: loanData.type,\n        otherType: loanData.otherType\n      };\n      await axios.post('http://localhost:5000/loans', data);\n      setLoanData(startFormData);\n      getCompanies();\n    };\n\n    const dropDownChangeHandler = e => {\n      let {\n        value\n      } = e.target;\n\n      if (value === \"Other\") {\n        setLoanData({ ...loanData,\n          type: value\n        });\n        setInputValidated({ ...inputValidated,\n          otherType: false\n        });\n      } else {\n        setLoanData({ ...loanData,\n          type: value,\n          otherType: \"\"\n        });\n        setInputValidated({ ...inputValidated,\n          otherType: true\n        });\n      }\n    };\n\n    const onChangeHandler = e => {\n      let {\n        name,\n        value\n      } = e.target;\n      setLoanData({ ...loanData,\n        [name]: value\n      });\n    };\n\n    const showLoanDetails = companyId => {\n      let clickedCompany = companies.find(company => company._id === companyId);\n      setCompanyLoanDetails(clickedCompany);\n      history.push('/details');\n    };\n\n    const deleteCompany = async companyId => {\n      await axios.delete('http://localhost:5000/loans/' + companyId);\n      let updatedCompanies = [...companies].filter(company => company._id !== companyId);\n      this.setState({ ...this.state,\n        companies: updatedCompanies\n      });\n    };\n\n    const inputUsed = name => {\n      if (inputClicked[name] === false) {\n        setInputClicked({ ...inputClicked,\n          [name]: true\n        });\n      }\n    };\n\n    const onBlurHandler = e => {\n      let {\n        name,\n        value\n      } = e.target;\n      inputUsed(name);\n      isFieldValid(name, value);\n    };\n\n    const isFieldValid = (name, value) => {\n      let validator = true;\n\n      if (value === \"\") {\n        validator = \"Please insert a value\";\n        setInputValidated({ ...inputValidated,\n          [name]: validator\n        });\n        return;\n      }\n\n      switch (name) {\n        case \"type\":\n          if (value === \"DEFAULT\") {\n            validator = \"Please choose a type\";\n          }\n\n          break;\n\n        case \"amount\":\n          console.log(name);\n\n          if (value < 15000) {\n            validator = \"Please insert an amount greater than Â£15000\";\n          } else if (value % 1000 !== 0) {\n            validator = \"Please insert an amount that is a multiple of 1000\";\n          }\n\n          break;\n      }\n\n      setInputValidated({ ...inputValidated,\n        [name]: validator\n      });\n    };\n\n    let formValid = () => {\n      for (let key in inputValidated) {\n        if (inputValidated[key] !== true) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    const changeGraph = e => {\n      switch (e.target.name) {\n        case \"average\":\n          setChartConfig({ ...chartConfig,\n            series: [{\n              name: \"Average\",\n              data: data.averages\n            }]\n          });\n          break;\n\n        case \"frequencyType\":\n          setChartConfig({ ...chartConfig,\n            series: [{\n              name: \"Frequency\",\n              data: data.frequencies\n            }]\n          });\n          break;\n\n        default:\n          console.log(\"error\");\n      }\n    };\n\n    let companiesUI;\n\n    if (companies !== []) {\n      companiesUI = companies.map(company => {\n        return /*#__PURE__*/React.createElement(Company, {\n          showLoanDetails: () => showLoanDetails(company._id),\n          key: company._id,\n          name: company.name,\n          deleteCompany: () => deleteCompany(company._id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 20\n          }\n        }, company.loans.map(loan => /*#__PURE__*/React.createElement(LoanRequest, {\n          amount: loan.amount,\n          type: loan.type,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 45\n          }\n        })));\n      });\n    }\n\n    const optionElements = [/*#__PURE__*/React.createElement(\"option\", {\n      key: \"-1\",\n      value: \"DEFAULT\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 29\n      }\n    }, \"Loan Type\"), loanTypes.map((loanType, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: loanType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 124\n      }\n    }, loanType))];\n    console.log(chartConfig);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => addLoan(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputAndError, {\n      id: \"nameInput\",\n      label: \"Name\",\n      name: \"name\",\n      value: loanData.name,\n      onChange: e => onChangeHandler(e),\n      onBlur: e => onBlurHandler(e),\n      errorMessage: inputValidated.name,\n      inputClicked: inputClicked.name,\n      inputValidated: inputValidated.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(InputAndError, {\n      id: \"amountInput\",\n      label: \"Amount\",\n      name: \"amount\",\n      value: loanData.amount,\n      onChange: e => onChangeHandler(e),\n      onBlur: e => onBlurHandler(e),\n      errorMessage: inputValidated.amount,\n      inputClicked: inputClicked.amount,\n      inputValidated: inputValidated.amount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(SelectAndError, {\n      id: \"loanType\",\n      label: \"Type\",\n      onBlur: e => onBlurHandler(e),\n      required: true,\n      name: \"type\",\n      value: loanData.type,\n      onChange: e => dropDownChangeHandler(e),\n      errorMessage: inputValidated.type,\n      inputClicked: inputClicked.type,\n      inputValidated: inputValidated.type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    }, optionElements), loanData.type === \"Other\" ? /*#__PURE__*/React.createElement(InputAndError, {\n      id: \"otherType\",\n      label: \"Other Type\",\n      name: \"otherType\",\n      value: loanData.otherType,\n      onChange: e => onChangeHandler(e),\n      onBlur: e => onBlurHandler(e),\n      errorMessage: inputValidated.otherType,\n      inputClicked: inputClicked.otherType,\n      inputValidated: inputValidated.otherType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"button\", {\n      disabled: !formValid(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }\n    }, \"Add Loan Request\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    }, \"Businesses\"), companies !== [] ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, \"Click Business to Show Further Details\"), /*#__PURE__*/React.createElement(StyledUl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, companiesUI)) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 16\n      }\n    }, \"Currently no businesses\")), chartConfig ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      name: \"average\",\n      onClick: e => changeGraph(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, \"Average of Each Loan Type\"), /*#__PURE__*/React.createElement(\"button\", {\n      name: \"frequencyType\",\n      onClick: e => changeGraph(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }\n    }, \"Frequency of Each Loan Type\"), /*#__PURE__*/React.createElement(\"button\", {\n      name: \"frequencyBands\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }\n    }, \"Frequency of Loans in Each Band\")), /*#__PURE__*/React.createElement(Chart, {\n      options: chartConfig.options,\n      series: chartConfig.series,\n      type: \"bar\",\n      width: \"700\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    })) : null, JSON.stringify(chartConfig));\n  }\n\n}\n\nLoansAndData.contextType = companyLoanContext;\nexport default LoansAndData;","map":{"version":3,"sources":["/Users/jonathantaylor/Google Drive/Interview2/Frontend/src/containers/LoansAndData.js"],"names":["React","useEffect","useState","useContext","Component","axios","loanTypeContext","companyLoanContext","Company","InputAndError","SelectAndError","LoanRequest","styled","Redirect","useHistory","average","tags","loanAmounts","bandCounter2","loanBandCounter","frequencyAndTotal","Chart","loanTypes","initialChartConfig","StyledUl","ul","StyledChart","LoansAndData","constructor","props","initialFormData","name","amount","type","otherType","state","chartConfig","companies","loanData","inputValidated","inputClicked","calculationData","componentDidMount","console","log","render","companyLoanDetails","setCompanyLoanDetails","context","history","getCompanies","response","get","setState","data","response2","dataTypes","Object","keys","frequencyAndTotals","values","averages","map","frequency","totalAmount","typeFrequencies","setData","frequencies","setChartConfig","options","plotOptions","bar","distributed","legend","show","chart","id","xaxis","categories","series","addLoan","e","preventDefault","post","setLoanData","startFormData","dropDownChangeHandler","value","target","setInputValidated","onChangeHandler","showLoanDetails","companyId","clickedCompany","find","company","_id","push","deleteCompany","delete","updatedCompanies","filter","inputUsed","setInputClicked","onBlurHandler","isFieldValid","validator","formValid","key","changeGraph","companiesUI","loans","loan","optionElements","loanType","index","JSON","stringify","contextType"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, Component } from 'react';\nimport axios from 'axios';\nimport { loanTypeContext, companyLoanContext } from '../context';\nimport Company from '../components/company';\nimport InputAndError from '../components/inputAndError';\nimport SelectAndError from '../components/selectAndError';\nimport LoanRequest from '../components/loanInfo';\nimport styled from 'styled-components';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { average, tags, loanAmounts, bandCounter2, loanBandCounter, frequencyAndTotal } from '../calculationFunctions';\nimport Chart from \"react-apexcharts\";\nimport { loanTypes, initialChartConfig } from '../config';\n\nconst StyledUl = styled.ul`\ndisplay: flex;\nflex-direction: column;\nwidth: 400px;\nmargin-top: 5rem;\n`\n\nconst StyledChart = styled(Chart)`\nborder: black solid 1px;\nmargin: 4rem;\nwidth: 700px;\n`\n\nclass LoansAndData extends Component {\n    static contextType = companyLoanContext\n\n    constructor(props) {\n        super(props);\n        \n        this.initialFormData = {name: \"\", amount: \"\", type: \"DEFAULT\", otherType: \"\"};\n\n        this.state = {\n            chartConfig: initialChartConfig,\n            companies: [],\n            loanTypes: loanTypes,\n            loanData: this.initialFormData,\n            inputValidated: {name: false, amount: false, type: false, otherType: true},\n            inputClicked: {name: false, amount: false, type: false, otherType: false},\n            calculationData: {},\n\n        }\n    }\n    \n    componentDidMount(){\n        console.log(\"Hello\");\n    }\n\n\n\n    render(){\n        const { companyLoanDetails, setCompanyLoanDetails } = this.context\n        const history = useHistory();\n\n    useEffect(()=> {\n        getCompanies();\n    }, [])\n\n    const getCompanies = async ()=>{\n        let response = await axios.get('http://localhost:5000/loans');\n        this.setState({...this.state, companies: response.data.companies});\n        let response2 = frequencyAndTotal(loanTypes, response.data.companies);\n        let dataTypes = Object.keys(response2);\n        let frequencyAndTotals = Object.values(response2)\n        let averages = frequencyAndTotals.map(data=> data.frequency !== 0 ? data.totalAmount/data.frequency : 0);\n        let typeFrequencies = frequencyAndTotals.map(data=>data.frequency);\n        setData({averages: averages, frequencies: typeFrequencies});\n        setChartConfig({\n            options: {\n                plotOptions: {\n                    bar: {\n                        distributed: true\n                    }\n                  },\n                legend: {\n                    show: false\n                }, \n                chart: {\n                    id: \"basic-bar\"\n                },\n                xaxis: {\n                    categories: [dataTypes],\n                }\n            },\n            series: [\n              {\n                name: \"\",\n                data: [averages]\n              }\n            ]\n        }\n        );\n    }\n\n   \n    \n\n    const addLoan = async (e)=>{\n        e.preventDefault();\n        let data = {name: loanData.name, amount: loanData.amount, type: loanData.type, otherType: loanData.otherType};\n        await axios.post('http://localhost:5000/loans', data);\n        setLoanData(startFormData);\n        getCompanies();        \n    }\n\n    const dropDownChangeHandler = (e)=>{\n        let {value} = e.target;\n        if(value===\"Other\"){\n            setLoanData({...loanData, type: value})\n            setInputValidated({...inputValidated, otherType: false})\n        }\n        else{\n            setLoanData({...loanData, type: value, otherType: \"\"});\n            setInputValidated({...inputValidated, otherType: true})\n        }\n    }\n\n    const onChangeHandler = (e)=>{\n        let {name, value} = e.target;\n        setLoanData({...loanData, [name]: value});\n    }\n\n    const showLoanDetails = (companyId)=>{\n        let clickedCompany = companies.find(company=> company._id===companyId);\n        setCompanyLoanDetails(clickedCompany);\n        history.push('/details');\n        \n    }\n    const deleteCompany = async (companyId)=>{\n        await axios.delete('http://localhost:5000/loans/' + companyId);\n        let updatedCompanies = [...companies].filter(company=>company._id!==companyId);\n        this.setState({...this.state, companies: updatedCompanies});\n    }\n\n    const inputUsed = (name)=>{\n        if(inputClicked[name]===false){\n            setInputClicked({...inputClicked, [name]: true})\n        }\n    }\n\n    const onBlurHandler = (e)=>{\n        let {name, value} = e.target;\n        inputUsed(name);\n        isFieldValid(name, value);\n    }\n\n    const isFieldValid = (name, value)=>{\n        let validator = true;\n        if(value===\"\"){\n            validator = \"Please insert a value\";\n            setInputValidated({...inputValidated, [name]: validator});\n            return\n        }\n\n        switch(name) {\n\n        case \"type\":\n            if(value===\"DEFAULT\"){\n                validator = \"Please choose a type\"\n            }\n            break;\n\n        case \"amount\":\n            console.log(name);\n            if(value < 15000){\n                validator = \"Please insert an amount greater than Â£15000\"\n            }\n            else if(value%1000!==0){\n                validator = \"Please insert an amount that is a multiple of 1000\"  \n            }   \n            break;     \n    }\n    setInputValidated({...inputValidated, [name]: validator});\n}\n\nlet formValid = ()=>{\n    for (let key in inputValidated){\n        if(inputValidated[key]!==true){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst changeGraph=(e)=>{\n    switch (e.target.name){\n        case \"average\":\n            setChartConfig({...chartConfig, series: [{name: \"Average\", data: data.averages}]});\n            break;\n        case \"frequencyType\":\n            setChartConfig({...chartConfig, series: [{name: \"Frequency\", data: data.frequencies}]});\n            break;\n        default:\n            console.log(\"error\");       \n    }\n}\n\n\n  let companiesUI;\n    if(companies!==[]){\n        companiesUI = companies.map(company=>{\n            return <Company showLoanDetails={()=>showLoanDetails(company._id)} key={company._id} name = {company.name} deleteCompany={()=>deleteCompany(company._id)}>\n                {company.loans.map((loan)=> <LoanRequest amount={loan.amount} type={loan.type}/>)}\n            </Company>\n        })\n    }\n   \n    const optionElements = [<option key=\"-1\" value=\"DEFAULT\" disabled>Loan Type</option>, loanTypes.map((loanType, index)=><option key={index} value={loanType}>{loanType}</option>)];\n\n    console.log(chartConfig);\n    return(\n        <>\n        <form onSubmit={(e)=>addLoan(e)} >\n            <InputAndError id=\"nameInput\" label=\"Name\" name=\"name\" value={loanData.name} onChange={(e)=>onChangeHandler(e)} onBlur={(e)=>onBlurHandler(e)} errorMessage={inputValidated.name} inputClicked={inputClicked.name} inputValidated={inputValidated.name}/>\n            <InputAndError id=\"amountInput\" label=\"Amount\" name=\"amount\" value={loanData.amount} onChange={(e)=>onChangeHandler(e)} onBlur={(e)=>onBlurHandler(e)} errorMessage={inputValidated.amount} inputClicked={inputClicked.amount} inputValidated={inputValidated.amount}/>\n            <SelectAndError id=\"loanType\" label=\"Type\" onBlur={(e)=>onBlurHandler(e)} required name=\"type\" value={loanData.type} onChange={(e)=>dropDownChangeHandler(e)} errorMessage={inputValidated.type} inputClicked={inputClicked.type} inputValidated={inputValidated.type}>\n                {optionElements}\n            </SelectAndError>\n            {loanData.type===\"Other\" ? \n            <InputAndError id=\"otherType\" label=\"Other Type\" name=\"otherType\" value={loanData.otherType} onChange={(e)=>onChangeHandler(e)} onBlur={(e)=>onBlurHandler(e)} errorMessage={inputValidated.otherType} inputClicked={inputClicked.otherType} inputValidated={inputValidated.otherType}/>\n            : null}\n            <button disabled={!formValid()}>Add Loan Request</button>\n        </form>\n        <div>\n            <h1>Businesses</h1>\n            \n            {companies!==[] ?\n            <> \n            <p>Click Business to Show Further Details</p>\n            <StyledUl>{companiesUI}</StyledUl>\n            </>\n             : <p>Currently no businesses</p>}\n        </div>\n        {chartConfig ? \n            <div>\n                <div>\n                    <button name=\"average\" onClick={(e)=>changeGraph(e)}>Average of Each Loan Type</button>  \n                    <button name=\"frequencyType\" onClick={(e)=>changeGraph(e)}>Frequency of Each Loan Type</button>\n                    <button name=\"frequencyBands\">Frequency of Loans in Each Band</button>\n                </div>\n                <Chart\n                    options={chartConfig.options}\n                    series={chartConfig.series}\n                    type=\"bar\"\n                    width=\"700\"\n                    />\n            </div>\n        :null}\n        {JSON.stringify(chartConfig)}\n        </>\n    )\n}; \n}\n\nexport default LoansAndData;"]},"metadata":{},"sourceType":"module"}
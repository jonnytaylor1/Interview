{"ast":null,"code":"export const loanTypes = [\"Buy another business\", \"Export overseas\", \"Acquire a new piece of equipment\", \"Buy a property and to rent it out\", \"Acquire a new vehicle for my business\", \"Recruit new staff\", \"Other\"];\nexport const initialChartConfig = {\n  options: {\n    chart: {\n      id: \"basic-bar\"\n    },\n    dataLabels: {\n      enabled: false\n    },\n    xaxis: {\n      categories: [],\n      labels: {\n        maxHeight: undefined\n      }\n    },\n    yaxis: {\n      title: {\n        text: \"Frequency\"\n      }\n    },\n    plotOptions: {\n      bar: {\n        distributed: true\n      }\n    },\n    legend: {\n      show: false\n    }\n  },\n  series: [{\n    name: \"\",\n    data: []\n  }]\n};\nexport const bandCounter = {\n  15000: 0,\n  25000: 0,\n  50000: 0,\n  100000: 0,\n  250000: 0,\n  500000: 0,\n  750000: 0,\n  1000000: 0,\n  2000000: 0\n};\n\nconst convertBandLowersToGroups = minValuesInBands => {\n  let groups = [];\n\n  for (let i = 0; i < minValuesInBands.length; i++) {\n    if (minValuesInBands[i + 1] === undefined) groups.push(minValuesInBands[i] + \"+\");else groups.push(minValuesInBands[i] + \"-\" + (parseInt(minValuesInBands[i + 1]) - 1).toString());\n  }\n\n  return groups;\n};\n\nexport let bandGroups = convertBandLowersToGroups(Object.keys(bandCounter));","map":{"version":3,"sources":["/Users/jonathantaylor/Google Drive/Interview2/Frontend/src/config.js"],"names":["loanTypes","initialChartConfig","options","chart","id","dataLabels","enabled","xaxis","categories","labels","maxHeight","undefined","yaxis","title","text","plotOptions","bar","distributed","legend","show","series","name","data","bandCounter","convertBandLowersToGroups","minValuesInBands","groups","i","length","push","parseInt","toString","bandGroups","Object","keys"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,CAAC,sBAAD,EAAyB,iBAAzB,EAA2C,kCAA3C,EAA8E,mCAA9E,EAAkH,uCAAlH,EAA0J,mBAA1J,EAA+K,OAA/K,CAAlB;AACP,OAAO,MAAMC,kBAAkB,GAAG;AAC9BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE;AACLC,MAAAA,EAAE,EAAE;AADC,KADA;AAIPC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE;AADC,KAJL;AAOPC,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE,EADP;AAELC,MAAAA,MAAM,EAAE;AACNC,QAAAA,SAAS,EAAEC;AADL;AAFH,KAPA;AAaPC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE;AADD;AADF,KAbA;AAkBPC,IAAAA,WAAW,EAAE;AACXC,MAAAA,GAAG,EAAE;AACDC,QAAAA,WAAW,EAAE;AADZ;AADM,KAlBN;AAuBPC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAE;AADA;AAvBD,GADqB;AA4B9BC,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,IAAI,EAAE,EADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GADM;AA5BsB,CAA3B;AAoCP,OAAO,MAAMC,WAAW,GAAG;AAAC,SAAO,CAAR;AAAW,SAAO,CAAlB;AAAqB,SAAO,CAA5B;AAA+B,UAAQ,CAAvC;AAA0C,UAAQ,CAAlD;AAAqD,UAAQ,CAA7D;AAAgE,UAAQ,CAAxE;AAA2E,WAAS,CAApF;AAAuF,WAAS;AAAhG,CAApB;;AAEP,MAAMC,yBAAyB,GAAGC,gBAAD,IAAoB;AACnD,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,gBAAgB,CAACG,MAAhC,EAAwCD,CAAC,EAAzC,EAA4C;AACxC,QAAGF,gBAAgB,CAACE,CAAC,GAAC,CAAH,CAAhB,KAAwBhB,SAA3B,EAAsCe,MAAM,CAACG,IAAP,CAAYJ,gBAAgB,CAACE,CAAD,CAAhB,GAAsB,GAAlC,EAAtC,KACKD,MAAM,CAACG,IAAP,CAAYJ,gBAAgB,CAACE,CAAD,CAAhB,GAAsB,GAAtB,GAA4B,CAACG,QAAQ,CAACL,gBAAgB,CAACE,CAAC,GAAC,CAAH,CAAjB,CAAR,GAAgC,CAAjC,EAAoCI,QAApC,EAAxC;AACR;;AACD,SAAOL,MAAP;AACD,CAPD;;AASA,OAAO,IAAIM,UAAU,GAAGR,yBAAyB,CAACS,MAAM,CAACC,IAAP,CAAYX,WAAZ,CAAD,CAA1C","sourcesContent":["export const loanTypes = [\"Buy another business\", \"Export overseas\",\"Acquire a new piece of equipment\",\"Buy a property and to rent it out\",\"Acquire a new vehicle for my business\",\"Recruit new staff\", \"Other\"];\nexport const initialChartConfig = {\n    options: {\n      chart: {\n        id: \"basic-bar\"\n      },\n      dataLabels: {\n        enabled: false\n      },\n      xaxis: {\n        categories: [],\n        labels: {\n          maxHeight: undefined\n        }\n      },\n      yaxis: {\n        title: {\n          text: \"Frequency\"\n        }\n      },\n      plotOptions: {\n        bar: {\n            distributed: true\n        }\n      },\n      legend: {\n        show: false\n      }\n    },\n    series: [\n      {\n        name: \"\",\n        data: []\n      }\n    ]\n}\n\nexport const bandCounter = {15000: 0, 25000: 0, 50000: 0, 100000: 0, 250000: 0, 500000: 0, 750000: 0, 1000000: 0, 2000000: 0};\n\nconst convertBandLowersToGroups =(minValuesInBands)=>{\n  let groups = []\n  for(let i=0; i<minValuesInBands.length; i++){\n      if(minValuesInBands[i+1]===undefined) groups.push(minValuesInBands[i] + \"+\"); \n      else groups.push(minValuesInBands[i] + \"-\" + (parseInt(minValuesInBands[i+1])-1).toString());\n  }\n  return groups;\n}\n\nexport let bandGroups = convertBandLowersToGroups(Object.keys(bandCounter));\n\n\n"]},"metadata":{},"sourceType":"module"}